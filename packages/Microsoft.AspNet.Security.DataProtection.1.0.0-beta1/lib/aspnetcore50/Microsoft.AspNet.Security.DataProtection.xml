<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.AspNet.Security.DataProtection</name>
    </assembly>
    <members>
        <member name="M:Microsoft.AspNet.Security.DataProtection.BitHelpers.WriteTo(System.Void*,System.UInt32)">
            <summary>
            Writes an unsigned 32-bit value to a memory address, big-endian.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.BitHelpers.WriteTo(System.Byte[],System.Int32@,System.Int32)">
            <summary>
            Writes a signed 32-bit value to a memory address, big-endian.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.BitHelpers.WriteTo(System.Byte[],System.Int32@,System.UInt32)">
            <summary>
            Writes a signed 32-bit value to a memory address, big-endian.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Security.DataProtection.DataProtectionExtensions">
            <summary>
            Helpful extension methods for data protection APIs.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.DataProtectionExtensions.AsTimeLimitedDataProtector(Microsoft.AspNet.Security.DataProtection.IDataProtector)">
            <summary>
            Creates a time-limited data protector based on an existing protector.
            </summary>
            <param name="protector">The existing protector from which to derive a time-limited protector.</param>
            <returns>A time-limited data protector.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.DataProtectionExtensions.Protect(Microsoft.AspNet.Security.DataProtection.IDataProtector,System.String)">
            <summary>
            Cryptographically protects a piece of plaintext data.
            </summary>
            <param name="protector">The data protector to use for this operation.</param>
            <param name="unprotectedData">The plaintext data to protect.</param>
            <returns>The protected form of the plaintext data.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.DataProtectionExtensions.Unprotect(Microsoft.AspNet.Security.DataProtection.IDataProtector,System.String)">
            <summary>
            Cryptographically unprotects a piece of protected data.
            </summary>
            <param name="protector">The data protector to use for this operation.</param>
            <param name="protectedData">The protected data to unprotect.</param>
            <returns>The plaintext form of the protected data.</returns>
            <remarks>
            This method will throw CryptographicException if the input is invalid or malformed.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNet.Security.DataProtection.EphemeralDataProtectionProvider">
            <summary>
            An IDataProtectionProvider that is transient.
            </summary>
            <remarks>
            Payloads generated by a given EphemeralDataProtectionProvider instance can only
            be deciphered by that same instance. Once the instance is lost, all ciphertexts
            generated by that instance are permanently undecipherable.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNet.Security.DataProtection.IDataProtectionProvider">
            <summary>
            An interface that can be used to create IDataProtector instances.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.IDataProtectionProvider.CreateProtector(System.String)">
            <summary>
            Creates an IDataProtector given a purpose.
            </summary>
            <param name="purposes">
            The purpose to be assigned to the newly-created IDataProtector.
            This parameter must be unique for the intended use case; two different IDataProtector
            instances created with two different 'purpose' strings will not be able
            to understand each other's payloads. The 'purpose' parameter is not intended to be
            kept secret.
            </param>
            <returns>An IDataProtector tied to the provided purpose.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Security.DataProtection.IDataProtector">
            <summary>
            An interface that can provide data protection services.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.IDataProtector.Protect(System.Byte[])">
            <summary>
            Cryptographically protects a piece of plaintext data.
            </summary>
            <param name="unprotectedData">The plaintext data to protect.</param>
            <returns>The protected form of the plaintext data.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.IDataProtector.Unprotect(System.Byte[])">
            <summary>
            Cryptographically unprotects a piece of protected data.
            </summary>
            <param name="protectedData">The protected data to unprotect.</param>
            <returns>The plaintext form of the protected data.</returns>
            <remarks>
            Implementations should throw CryptographicException if the protected data is
            invalid or malformed.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNet.Security.DataProtection.ISecret">
            <summary>
            Represents a secret value.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Security.DataProtection.ISecret.Length">
            <summary>
            The length (in bytes) of the value.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.ISecret.WriteSecretIntoBuffer(System.ArraySegment{System.Byte})">
            <summary>
            Writes the secret value to the specified buffer.
            </summary>
            <param name="buffer">The buffer which should receive the secret value.</param>
            <remarks>
            The buffer size must exactly match the length of the secret value.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNet.Security.DataProtection.ITimeLimitedDataProtector">
            <summary>
            An interface that can provide data protection services.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.ITimeLimitedDataProtector.CreateProtector(System.String)">
            <summary>
            Creates an IDataProtector given a purpose.
            </summary>
            <param name="purposes">
            The purpose to be assigned to the newly-created IDataProtector.
            This parameter must be unique for the intended use case; two different IDataProtector
            instances created with two different 'purpose' strings will not be able
            to understand each other's payloads. The 'purpose' parameter is not intended to be
            kept secret.
            </param>
            <returns>An IDataProtector tied to the provided purpose.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.ITimeLimitedDataProtector.Protect(System.Byte[],System.DateTimeOffset)">
            <summary>
            Cryptographically protects a piece of plaintext data and assigns an expiration date to the data.
            </summary>
            <param name="unprotectedData">The plaintext data to protect.</param>
            <param name="expiration">The date after which the data can no longer be unprotected.</param>
            <returns>The protected form of the plaintext data.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.ITimeLimitedDataProtector.Unprotect(System.Byte[],System.DateTimeOffset@)">
            <summary>
            Cryptographically unprotects a piece of protected data.
            </summary>
            <param name="protectedData">The protected data to unprotect.</param>
            <param name="expiration">After unprotection, contains the expiration date of the protected data.</param>
            <returns>The plaintext form of the protected data.</returns>
            <remarks>
            Implementations should throw CryptographicException if the protected data is invalid or malformed.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNet.Security.DataProtection.KeyDerivationPrf">
            <summary>
            Specifies the PRF which should be used for the key derivation algorithm.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.Security.DataProtection.KeyDerivationPrf.Sha1">
            <summary>
            SHA-1 (FIPS PUB 180-4)
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.Security.DataProtection.KeyDerivationPrf.Sha256">
            <summary>
            SHA-256 (FIPS PUB 180-4)
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.Security.DataProtection.KeyDerivationPrf.Sha512">
            <summary>
            SHA-512 (FIPS PUB 180-4)
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Security.DataProtection.MemoryProtection">
            <summary>
            Support for generating random data.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.UnsafeBufferUtil.SecureZeroMemory(System.Byte*,System.Int32)">
            <summary>
            Securely clears a memory buffer.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.UnsafeBufferUtil.SecureZeroMemory(System.Byte*,System.UInt32)">
            <summary>
            Securely clears a memory buffer.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.UnsafeBufferUtil.SecureZeroMemory(System.Byte*,System.UInt64)">
            <summary>
            Securely clears a memory buffer.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.UnsafeBufferUtil.SecureZeroMemory(System.Byte*,System.IntPtr)">
            <summary>
            Securely clears a memory buffer.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.UnsafeBufferUtil.ToManagedByteArray(System.Byte*,System.Int32)">
            <summary>
            Creates a new managed byte[] from unmanaged memory.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.UnsafeBufferUtil.ToManagedByteArray(System.Byte*,System.UInt32)">
            <summary>
            Creates a new managed byte[] from unmanaged memory.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.WebEncoders.Base64UrlDecode(System.String)">
            <summary>
            Decodes a base64url-encoded string.
            </summary>
            <param name="input">The base64url-encoded input to decode.</param>
            <returns>The base64url-decoded form of the input.</returns>
            <remarks>
            The input must not contain any whitespace or padding characters.
            Throws FormatException if the input is malformed.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.WebEncoders.Base64UrlEncode(System.Byte[])">
            <summary>
            Encodes an input using base64url encoding.
            </summary>
            <param name="input">The binary input to encode.</param>
            <returns>The base64url-encoded form of the input.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Security.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorConfigurationFactory">
            <summary>
            A factory that is able to create a CNG-based IAuthenticatedEncryptor
            using CBC encryption + HMAC validation.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Security.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorConfigurationOptions">
            <summary>
            Options for configuring an authenticated encryption mechanism which uses
            Windows CNG algorithms in CBC encryption + HMAC validation modes.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Security.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorConfigurationOptions.EncryptionAlgorithm">
            <summary>
            The name of the algorithm to use for symmetric encryption.
            This property corresponds to the 'pszAlgId' parameter of BCryptOpenAlgorithmProvider.
            This property is required to have a value.
            </summary>
            <remarks>
            The algorithm must support CBC-style encryption and must have a block size of 64 bits or greater.
            The default value is 'AES'.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNet.Security.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorConfigurationOptions.EncryptionAlgorithmProvider">
            <summary>
            The name of the provider which contains the implementation of the symmetric encryption algorithm.
            This property corresponds to the 'pszImplementation' parameter of BCryptOpenAlgorithmProvider.
            This property is optional.
            </summary>
            <remarks>
            The default value is null.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNet.Security.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorConfigurationOptions.EncryptionAlgorithmKeySize">
            <summary>
            The length (in bits) of the key that will be used for symmetric encryption.
            This property is required to have a value.
            </summary>
            <remarks>
            The key length must be 128 bits or greater.
            The default value is 256.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNet.Security.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorConfigurationOptions.HashAlgorithm">
            <summary>
            The name of the algorithm to use for hashing data.
            This property corresponds to the 'pszAlgId' parameter of BCryptOpenAlgorithmProvider.
            This property is required to have a value.
            </summary>
            <remarks>
            The algorithm must support being opened in HMAC mode and must have a digest length
            of 128 bits or greater.
            The default value is 'SHA256'.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNet.Security.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorConfigurationOptions.HashAlgorithmProvider">
            <summary>
            The name of the provider which contains the implementation of the hash algorithm.
            This property corresponds to the 'pszImplementation' parameter of BCryptOpenAlgorithmProvider.
            This property is optional.
            </summary>
            <remarks>
            The default value is null.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptorConfigurationOptions.Clone">
            <summary>
            Makes a duplicate of this object, which allows the original object to remain mutable.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Security.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptorConfigurationFactory">
            <summary>
            A factory that is able to create a CNG-based IAuthenticatedEncryptor
            using CBC encryption + HMAC validation.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Security.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptorConfigurationOptions">
            <summary>
            Options for configuring an authenticated encryption mechanism which uses
            Windows CNG encryption algorithms in Galois/Counter Mode.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Security.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptorConfigurationOptions.EncryptionAlgorithm">
            <summary>
            The name of the algorithm to use for symmetric encryption.
            This property corresponds to the 'pszAlgId' parameter of BCryptOpenAlgorithmProvider.
            This property is required to have a value.
            </summary>
            <remarks>
            The algorithm must support GCM-style encryption and must have a block size of exactly 128 bits.
            The default value is 'AES'.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNet.Security.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptorConfigurationOptions.EncryptionAlgorithmProvider">
            <summary>
            The name of the provider which contains the implementation of the symmetric encryption algorithm.
            This property corresponds to the 'pszImplementation' parameter of BCryptOpenAlgorithmProvider.
            This property is optional.
            </summary>
            <remarks>
            The default value is null.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNet.Security.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptorConfigurationOptions.EncryptionAlgorithmKeySize">
            <summary>
            The length (in bits) of the key that will be used for symmetric encryption.
            This property is required to have a value.
            </summary>
            <remarks>
            The key length must be 128 bits or greater.
            The default value is 256.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptorConfigurationOptions.Clone">
            <summary>
            Makes a duplicate of this object, which allows the original object to remain mutable.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Security.DataProtection.AuthenticatedEncryption.IAuthenticatedEncryptor">
            <summary>
            The basic interface for providing an authenticated encryption and decryption routine.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.AuthenticatedEncryption.IAuthenticatedEncryptor.Decrypt(System.ArraySegment{System.Byte},System.ArraySegment{System.Byte})">
            <summary>
            Validates the authentication tag of and decrypts a blob of encrypted data.
            </summary>
            <param name="ciphertext">The ciphertext (including authentication tag) to decrypt.</param>
            <param name="additionalAuthenticatedData">Any ancillary data which was used during computation
            of the authentication tag. The same AAD must have been specified in the corresponding
            call to 'Encrypt'.</param>
            <returns>The original plaintext data (if the authentication tag was validated and decryption succeeded).</returns>
            <remarks>All cryptography-related exceptions should be homogenized to CryptographicException.</remarks>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.AuthenticatedEncryption.IAuthenticatedEncryptor.Encrypt(System.ArraySegment{System.Byte},System.ArraySegment{System.Byte})">
            <summary>
            Encrypts and tamper-proofs a piece of data.
            </summary>
            <param name="plaintext">The plaintext to encrypt. This input may be zero bytes in length.</param>
            <param name="additionalAuthenticatedData">A piece of data which will not be included in
            the returned ciphertext but which will still be covered by the authentication tag.
            This input may be zero bytes in length. The same AAD must be specified in the corresponding
            call to Decrypt.</param>
            <returns>The ciphertext blob, including authentication tag.</returns>
            <remarks>All cryptography-related exceptions should be homogenized to CryptographicException.</remarks>
        </member>
        <member name="T:Microsoft.AspNet.Security.DataProtection.AuthenticatedEncryption.IAuthenticatedEncryptorConfiguration">
            <summary>
            Represents a type that contains configuration information about an IAuthenticatedEncryptor
            instance, including how to serialize it to XML.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.AuthenticatedEncryption.IAuthenticatedEncryptorConfiguration.CreateEncryptorInstance">
            <summary>
            Creates a new IAuthenticatedEncryptor instance based on the current configuration.
            </summary>
            <returns>An IAuthenticatedEncryptor instance.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.AuthenticatedEncryption.IAuthenticatedEncryptorConfiguration.ToXml(Microsoft.AspNet.Security.DataProtection.XmlEncryption.IXmlEncryptor)">
            <summary>
            Exports the current configuration to XML, optionally encrypting secret key material.
            </summary>
            <param name="xmlEncryptor">The XML encryptor used to encrypt secret material.</param>
            <returns>An XElement representing the current configuration object.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Security.DataProtection.AuthenticatedEncryption.IAuthenticatedEncryptorConfigurationFactory">
            <summary>
            Represents a type that can create new authenticated encryption configuration objects.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.AuthenticatedEncryption.IAuthenticatedEncryptorConfigurationFactory.CreateNewConfiguration">
            <summary>
            Creates a new configuration object with fresh secret key material.
            </summary>
            <returns>
            An IAuthenticatedEncryptorConfiguration instance.
            </returns>
        </member>
        <member name="T:Microsoft.AspNet.Security.DataProtection.AuthenticatedEncryption.IAuthenticatedEncryptorConfigurationXmlReader">
            <summary>
            Represents a type that can deserialize an XML-serialized IAuthenticatedEncryptorConfiguration.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.AuthenticatedEncryption.IAuthenticatedEncryptorConfigurationXmlReader.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Deserializes an XML-serialized IAuthenticatedEncryptorConfiguration.
            </summary>
            <param name="element">The XML element to deserialize.</param>
            <returns>The deserialized IAuthenticatedEncryptorConfiguration.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Security.DataProtection.AuthenticatedEncryption.ManagedAuthenticatedEncryptorConfigurationOptions">
            <summary>
            Options for configuring an authenticated encryption mechanism which uses
            managed SymmetricAlgorithm and KeyedHashAlgorithm implementations.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Security.DataProtection.AuthenticatedEncryption.ManagedAuthenticatedEncryptorConfigurationOptions.EncryptionAlgorithmType">
            <summary>
            The type of the algorithm to use for symmetric encryption.
            This property is required to have a value.
            </summary>
            <remarks>
            The algorithm must support CBC-style encryption and PKCS#7 padding and must have a block size of 64 bits or greater.
            The default algorithm is AES.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNet.Security.DataProtection.AuthenticatedEncryption.ManagedAuthenticatedEncryptorConfigurationOptions.EncryptionAlgorithmKeySize">
            <summary>
            The length (in bits) of the key that will be used for symmetric encryption.
            This property is required to have a value.
            </summary>
            <remarks>
            The key length must be 128 bits or greater.
            The default value is 256.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNet.Security.DataProtection.AuthenticatedEncryption.ManagedAuthenticatedEncryptorConfigurationOptions.ValidationAlgorithmType">
            <summary>
            A factory for the algorithm to use for validation.
            This property is required to have a value.
            </summary>
            <remarks>
            The algorithm must have a digest length of 128 bits or greater.
            The default algorithm is HMACSHA256.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.AuthenticatedEncryption.ManagedAuthenticatedEncryptorConfigurationOptions.Clone">
            <summary>
            Makes a duplicate of this object, which allows the original object to remain mutable.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Security.DataProtection.Cng.CachedAlgorithmHandles">
            <summary>
            Provides cached CNG algorithm provider instances, as calling BCryptOpenAlgorithmProvider is expensive.
            Callers should use caution never to dispose of the algorithm provider instances returned by this type.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Security.DataProtection.KeyManagement.IKey">
            <summary>
            The basic interface for representing an authenticated encryption key.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Security.DataProtection.KeyManagement.IKey.ActivationDate">
            <summary>
            The date at which encryptions with this key can begin taking place.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Security.DataProtection.KeyManagement.IKey.CreationDate">
            <summary>
            The date on which this key was created.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Security.DataProtection.KeyManagement.IKey.ExpirationDate">
            <summary>
            The date after which encryptions with this key may no longer take place.
            </summary>
            <remarks>
            An expired key may still be used to decrypt existing payloads.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNet.Security.DataProtection.KeyManagement.IKey.IsRevoked">
            <summary>
            Returns a value stating whether this key was revoked.
            </summary>
            <remarks>
            A revoked key may still be used to decrypt existing payloads, but the payloads
            must be treated as potentially unauthentic unless the application has some
            other assurance that the payloads are authentic.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNet.Security.DataProtection.KeyManagement.IKey.KeyId">
            <summary>
            The id of the key.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.KeyManagement.IKey.CreateEncryptorInstance">
            <summary>
            Creates an IAuthenticatedEncryptor instance that can be used to encrypt data
            to and decrypt data from this key.
            </summary>
            <returns>An IAuthenticatedEncryptor.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Security.DataProtection.KeyManagement.IKeyManager">
            <summary>
            The basic interface for performing key management operations.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.KeyManagement.IKeyManager.CreateNewKey(System.DateTimeOffset,System.DateTimeOffset)">
            <summary>
            Creates a new key with the specified activation and expiration dates.
            </summary>
            <param name="activationDate">The date on which encryptions to this key may begin.</param>
            <param name="expirationDate">The date after which encryptions to this key may no longer take place.</param>
            <returns>The newly-created IKey instance.</returns>
            <remarks>
            This method also persists the newly-created IKey instance to the underlying repository.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.KeyManagement.IKeyManager.GetAllKeys">
            <summary>
            Fetches all keys from the underlying repository.
            </summary>
            <returns>The collection of all keys.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.KeyManagement.IKeyManager.RevokeKey(System.Guid,System.String)">
            <summary>
            Revokes a specific key.
            </summary>
            <param name="keyId">The id of the key to revoke.</param>
            <param name="reason">An optional human-readable reason for revocation.</param>
            <remarks>
            This method will not mutate existing IKey instances. After calling this method,
            all existing IKey instances should be discarded, and GetAllKeys should be called again.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.KeyManagement.IKeyManager.RevokeAllKeys(System.DateTimeOffset,System.String)">
            <summary>
            Revokes all keys created before a specified date.
            </summary>
            <param name="revocationDate">The revocation date. All keys with a creation date before
            this value will be revoked.</param>
            <param name="reason">An optional human-readable reason for revocation.</param>
            <remarks>
            This method will not mutate existing IKey instances. After calling this method,
            all existing IKey instances should be discarded, and GetAllKeys should be called again.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNet.Security.DataProtection.PBKDF2.IPbkdf2Provider">
            <summary>
            Internal interface used for abstracting away the PBKDF2 implementation since the implementation is OS-specific.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Security.DataProtection.PBKDF2.ManagedPbkdf2Provider">
            <summary>
            A PBKDF2 provider which utilizes the managed hash algorithm classes as PRFs.
            This isn't the preferred provider since the implementation is slow, but it is provided as a fallback.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Security.DataProtection.PBKDF2.Pbkdf2Util">
            <summary>
            Internal base class used for abstracting away the PBKDF2 implementation since the implementation is OS-specific.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Security.DataProtection.PBKDF2.Win7Pbkdf2Provider">
            <summary>
            A PBKDF2 provider which utilizes the Win7 API BCryptDeriveKeyPBKDF2.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Security.DataProtection.PBKDF2.Win8Pbkdf2Provider">
            <summary>
            A PBKDF2 provider which utilizes the Win8 API BCryptKeyDerivation.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Security.DataProtection.Resources.BCryptAlgorithmHandle_ProviderNotFound">
            <summary>
            A provider could not be found for algorithm '{0}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.Resources.FormatBCryptAlgorithmHandle_ProviderNotFound(System.Object)">
            <summary>
            A provider could not be found for algorithm '{0}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Security.DataProtection.Resources.BCRYPT_KEY_LENGTHS_STRUCT_InvalidKeyLength">
            <summary>
            The key length {0} is invalid. Valid key lengths are {1} to {2} bits (step size {3}).
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.Resources.FormatBCRYPT_KEY_LENGTHS_STRUCT_InvalidKeyLength(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The key length {0} is invalid. Valid key lengths are {1} to {2} bits (step size {3}).
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Security.DataProtection.Resources.CryptCommon_GenericError">
            <summary>
            An error occurred during a cryptographic operation.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.Resources.FormatCryptCommon_GenericError">
            <summary>
            An error occurred during a cryptographic operation.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Security.DataProtection.Resources.Common_BufferIncorrectlySized">
            <summary>
            The provided buffer is of length {0} byte(s). It must instead be exactly {1} byte(s) in length.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.Resources.FormatCommon_BufferIncorrectlySized(System.Object,System.Object)">
            <summary>
            The provided buffer is of length {0} byte(s). It must instead be exactly {1} byte(s) in length.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Security.DataProtection.Resources.CryptCommon_PayloadInvalid">
            <summary>
            The payload was invalid.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.Resources.FormatCryptCommon_PayloadInvalid">
            <summary>
            The payload was invalid.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Security.DataProtection.Resources.Common_PropertyCannotBeNullOrEmpty">
            <summary>
            Property {0} cannot be null or empty.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.Resources.FormatCommon_PropertyCannotBeNullOrEmpty(System.Object)">
            <summary>
            Property {0} cannot be null or empty.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Security.DataProtection.Resources.Common_DecryptionFailed">
            <summary>
            The provided payload could not be decrypted. Refer to the inner exception for more information.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.Resources.FormatCommon_DecryptionFailed">
            <summary>
            The provided payload could not be decrypted. Refer to the inner exception for more information.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Security.DataProtection.Resources.Common_EncryptionFailed">
            <summary>
            An error occurred while trying to encrypt the provided data. Refer to the inner exception for more information.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.Resources.FormatCommon_EncryptionFailed">
            <summary>
            An error occurred while trying to encrypt the provided data. Refer to the inner exception for more information.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Security.DataProtection.Resources.Common_KeyNotFound">
            <summary>
            The key {0:B} was not found in the keyring.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.Resources.FormatCommon_KeyNotFound">
            <summary>
            The key {0:B} was not found in the keyring.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Security.DataProtection.Resources.Common_KeyRevoked">
            <summary>
            The key {0:B} has been revoked.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.Resources.FormatCommon_KeyRevoked">
            <summary>
            The key {0:B} has been revoked.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Security.DataProtection.Resources.Common_NotAValidProtectedPayload">
            <summary>
            The provided payload was not protected with this protection provider.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.Resources.FormatCommon_NotAValidProtectedPayload">
            <summary>
            The provided payload was not protected with this protection provider.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Security.DataProtection.Resources.Common_PayloadProducedByNewerVersion">
            <summary>
            The protected payload cannot be decrypted because it was protected with a newer version of the protection provider.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.Resources.FormatCommon_PayloadProducedByNewerVersion">
            <summary>
            The protected payload cannot be decrypted because it was protected with a newer version of the protection provider.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Security.DataProtection.Resources.TimeLimitedDataProtector_PayloadExpired">
            <summary>
            The payload expired at {0}.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.Resources.FormatTimeLimitedDataProtector_PayloadExpired(System.Object)">
            <summary>
            The payload expired at {0}.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Security.DataProtection.Repositories.FileSystemXmlRepository">
            <summary>
            An XML repository backed by a file system.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Security.DataProtection.Repositories.IXmlRepository">
            <summary>
            The basic interface for storing and retrieving XML elements.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.Repositories.IXmlRepository.GetAllElements">
            <summary>
            Gets all top-level XML elements in the repository.
            </summary>
            <remarks>
            All top-level elements in the repository.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.Repositories.IXmlRepository.StoreElement(System.Xml.Linq.XElement,System.String)">
            <summary>
            Adds a top-level XML element to the repository.
            </summary>
            <param name="element">The element to add.</param>
            <param name="friendlyName">An optional name to be associated with the XML element.
            For instance, if this repository stores XML files on disk, the friendly name may
            be used as part of the file name. Repository implementations are not required to
            observe this parameter even if it has been provided by the caller.</param>
        </member>
        <member name="T:Microsoft.AspNet.Security.DataProtection.Repositories.RegistryXmlRepository">
            <summary>
            An XML repository backed by the Windows registry.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.SafeHandles.BCryptAlgorithmHandle.CreateHash">
            <summary>
            Creates an unkeyed hash handle from this hash algorithm.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.SafeHandles.BCryptAlgorithmHandle.CreateHmac(System.Byte*,System.UInt32)">
            <summary>
            Creates an HMAC hash handle from this hash algorithm.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.SafeHandles.BCryptAlgorithmHandle.GenerateSymmetricKey(System.Byte*,System.UInt32)">
            <summary>
            Imports a key into a symmetric encryption or KDF algorithm.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.SafeHandles.BCryptAlgorithmHandle.GetAlgorithmName">
            <summary>
            Gets the name of this BCrypt algorithm.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.SafeHandles.BCryptAlgorithmHandle.GetCipherBlockLength">
            <summary>
            Gets the cipher block length (in bytes) of this block cipher algorithm.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.SafeHandles.BCryptAlgorithmHandle.GetHashBlockLength">
            <summary>
            Gets the hash block length (in bytes) of this hash algorithm.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.SafeHandles.BCryptAlgorithmHandle.GetSupportedKeyLengths">
            <summary>
            Gets the key lengths (in bits) supported by this algorithm.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.SafeHandles.BCryptAlgorithmHandle.GetHashDigestLength">
            <summary>
            Gets the digest length (in bytes) of this hash algorithm provider.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.SafeHandles.BCryptHashHandle.DuplicateHash">
            <summary>
            Duplicates this hash handle, including any existing hashed state.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.SafeHandles.BCryptHashHandle.HashData(System.Byte*,System.UInt32,System.Byte*,System.UInt32)">
            <summary>
            Calculates the cryptographic hash over a set of input data.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Security.DataProtection.SafeHandles.LocalAllocHandle">
            <summary>
            Represents a handle returned by LocalAlloc.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Security.DataProtection.SafeHandles.SafeLibraryHandle">
            <summary>
            Represents a handle to a Windows module (DLL).
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.SafeHandles.SafeLibraryHandle.DoesProcExist(System.String)">
            <summary>
            Returns a value stating whether the library exports a given proc.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.SafeHandles.SafeLibraryHandle.ForbidUnload">
            <summary>
            Forbids this library from being unloaded. The library will remain loaded until process termination,
            regardless of how many times FreeLibrary is called.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.SafeHandles.SafeLibraryHandle.FormatMessage(System.Int32)">
            <summary>
            Formats a message string using the resource table in the specified library.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.SafeHandles.SafeLibraryHandle.GetProcAddress``1(System.String,System.Boolean)">
            <summary>
            Gets a delegate pointing to a given export from this library.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.SafeHandles.SafeLibraryHandle.Open(System.String)">
            <summary>
            Opens a library. If 'filename' is not a fully-qualified path, the default search path is used.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Security.DataProtection.SafeHandles.SafeNCryptKeyHandle">
            <summary>
            Represents a managed view over an NCRYPT_KEY_HANDLE.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Security.DataProtection.SafeHandles.SecureLocalAllocHandle">
            <summary>
            Represents a handle returned by LocalAlloc.
            The memory will be zeroed out before it's freed.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.SafeHandles.SecureLocalAllocHandle.Allocate(System.IntPtr)">
            <summary>
            Allocates some amount of memory using LocalAlloc.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Security.DataProtection.SP800_108.SP800_108_CTR_HMACSHA512Util">
            <summary>
            Provides an implementation of the SP800-108-CTR-HMACSHA512 key derivation function.
            This class assumes at least Windows 7 / Server 2008 R2.
            </summary>
            <remarks>
            More info at http://csrc.nist.gov/publications/nistpubs/800-108/sp800-108.pdf, Sec. 5.1.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNet.Security.DataProtection.XmlEncryption.CertificateXmlEncryptor">
            <summary>
            A class that performs XML encryption using an X.509 certificate.
            </summary>
            <remarks>
            This type currently requires Windows 8.1 (Windows Server 2012 R2) or higher.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.XmlEncryption.CertificateXmlEncryptor.Encrypt(System.Xml.Linq.XElement)">
            <summary>
            Encrypts the specified XML element using an X.509 certificate.
            </summary>
            <param name="plaintextElement">The plaintext XML element to encrypt. This element is unchanged by the method.</param>
            <returns>The encrypted form of the XML element.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Security.DataProtection.XmlEncryption.DpapiNGXmlDecryptor">
            <summary>
            A class that can decrypt XML elements which were encrypted using Windows DPAPI:NG.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.XmlEncryption.DpapiNGXmlDecryptor.Decrypt(System.Xml.Linq.XElement)">
            <summary>
            Decrypts the specified XML element using Windows DPAPI:NG.
            </summary>
            <param name="encryptedElement">The encrypted XML element to decrypt. This element is unchanged by the method.</param>
            <returns>The decrypted form of the XML element.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Security.DataProtection.XmlEncryption.DpapiNGXmlEncryptor">
            <summary>
            A class that can encrypt XML elements using Windows DPAPI:NG.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.XmlEncryption.DpapiNGXmlEncryptor.Encrypt(System.Xml.Linq.XElement)">
            <summary>
            Encrypts the specified XML element using Windows DPAPI:NG.
            </summary>
            <param name="plaintextElement">The plaintext XML element to encrypt. This element is unchanged by the method.</param>
            <returns>The encrypted form of the XML element.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Security.DataProtection.XmlEncryption.DpapiXmlDecryptor">
            <summary>
            A class that can decrypt XML elements which were encrypted using Windows DPAPI.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.XmlEncryption.DpapiXmlDecryptor.Decrypt(System.Xml.Linq.XElement)">
            <summary>
            Decrypts the specified XML element using Windows DPAPI.
            </summary>
            <param name="encryptedElement">The encrypted XML element to decrypt. This element is unchanged by the method.</param>
            <returns>The decrypted form of the XML element.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Security.DataProtection.XmlEncryption.DpapiXmlEncryptor">
            <summary>
            A class that can encrypt XML elements using Windows DPAPI.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.XmlEncryption.DpapiXmlEncryptor.Encrypt(System.Xml.Linq.XElement)">
            <summary>
            Encrypts the specified XML element using Windows DPAPI.
            </summary>
            <param name="plaintextElement">The plaintext XML element to encrypt. This element is unchanged by the method.</param>
            <returns>The encrypted form of the XML element.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Security.DataProtection.XmlEncryption.IXmlDecryptor">
            <summary>
            The basic interface for decrypting an XML element.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.XmlEncryption.IXmlDecryptor.Decrypt(System.Xml.Linq.XElement)">
            <summary>
            Decrypts the specified XML element.
            </summary>
            <param name="encryptedElement">The encrypted XML element to decrypt. This element is unchanged by the method.</param>
            <returns>The decrypted form of the XML element.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Security.DataProtection.XmlEncryption.IXmlEncryptor">
            <summary>
            The basic interface for encrypting an XML element.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.XmlEncryption.IXmlEncryptor.Encrypt(System.Xml.Linq.XElement)">
            <summary>
            Encrypts the specified XML element.
            </summary>
            <param name="plaintextElement">The plaintext XML element to encrypt. This element is unchanged by the method.</param>
            <returns>The encrypted form of the XML element.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Security.DataProtection.XmlEncryption.NullXmlDecryptor">
            <summary>
            A class that can decrypt XML elements which were encrypted using a null encryptor.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Security.DataProtection.XmlEncryption.NullXmlEncryptor">
            <summary>
            A class that performs null XML encryption (just returns the plaintext).
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.DataProtection.XmlEncryption.NullXmlEncryptor.Encrypt(System.Xml.Linq.XElement)">
            <summary>
            Encrypts the specified XML element using a null encryptor.
            </summary>
            <param name="plaintextElement">The plaintext XML element to encrypt. This element is unchanged by the method.</param>
            <returns>The null-encrypted form of the XML element.</returns>
        </member>
    </members>
</doc>
