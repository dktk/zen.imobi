@using Zen.Imobi.Models.Property
@using Resources = Zen.Imobi.Resources

@model CreatePropertyModel

@{
    ViewBag.Title = Resources.Property.ViewCreate_Title;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@Resources.Property.ViewCreate_Title</h2>

@if (ViewBag.ModelValidationError != null)
{
    <div class="error">
        @Html.Encode(ViewBag.ModelValidationError)
    </div>
}

@if (ViewBag.CongratulationForRentalMessage != null)
{
    <!-- todo: this needs to be made nice ... -->
    <div class="success">
        @Html.Encode(ViewBag.CongratulationForRentalMessage)
    </div>
}

@if (Model != CreatePropertyModel.Empty)
{
    if (!Model.IsRented)
    {
        using (Html.BeginForm("Rent", "Property"))
        {
            @Html.AntiForgeryToken()

            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Rent" class="btn btn-default" />
                </div>
            </div>
        }
    }
    else
    {
        <p>@Html.Encode(Resources.Property.PropertyRented)</p>
        <p>@Html.ActionLink(Resources.Property.OfferPropertyForRent, "OfferForRent")</p>
    }
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, string.Empty, new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Number, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.YearOfConstruction, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.YearOfConstruction, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.YearOfConstruction, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SouthernOrientation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.SouthernOrientation)
                    @Html.ValidationMessageFor(model => model.SouthernOrientation, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>

    @Html.HiddenFor(model => model.Status)
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
