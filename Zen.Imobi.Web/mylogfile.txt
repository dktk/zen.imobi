2014-12-06 03:38:24,389 [48] INFO Zen.Imobi.Web.Controllers.PropertyController - this is some tesxt
2014-12-06 03:51:28,600 [64] INFO Zen.Imobi.Web.Controllers.PropertyController - this is some tesxt
2014-12-06 03:52:53,145 [65] INFO Zen.Imobi.Web.Controllers.PropertyController - this is some tesxt
2014-12-06 03:53:22,892 [73] INFO Zen.Imobi.Web.Controllers.PropertyController - this is some tesxt
2014-12-06 03:53:44,526 [67] INFO Zen.Imobi.Web.Controllers.PropertyController - this is some tesxt
2014-12-06 15:49:09,442 [13] INFO Zen.Imobi.Web.Controllers.PropertyController - this is some tesxt
2014-12-07 00:42:43,148 [1] INFO Rebus.Persistence.SqlServer.SqlServerSubscriptionStorage - Table 'Rebus.Subscriptions' does not exist - it will be created now
2014-12-07 00:42:43,238 [1] INFO Rebus.Persistence.SqlServer.SqlServerSagaPersister - Tables 'Rebus.SagaTable' and 'Rebus.SagaIndexTable' do not exist - they will be created now
2014-12-07 01:00:43,122 [1] INFO Rebus.Bus.RebusBus - Rebus bus 1 created
2014-12-07 01:00:43,161 [1] INFO Rebus.Bus.RebusBus - Using external timeout manager with input queue 'rebus.timeout'
2014-12-07 01:00:43,174 [1] INFO Rebus.Bus.RebusBus - Initializing bus with 1 workers
2014-12-07 01:00:43,189 [1] INFO Rebus.Bus.Worker - Worker Rebus 1 worker 1 created and inner thread started
2014-12-07 01:00:43,194 [1] INFO Rebus.Bus.Worker - Starting worker thread Rebus 1 worker 1
2014-12-07 01:00:43,195 [1] INFO Rebus.Bus.RebusBus - Bus started
2014-12-07 01:01:02,582 [53] INFO Rebus.Bus.Worker - Stopping worker thread Rebus 1 worker 1
2014-12-07 01:01:02,599 [65] INFO Rebus.Bus.Worker - Disposing worker thread Rebus 1 worker 1
2014-12-07 01:01:03,592 [65] INFO Rebus.Transports.Msmq.MsmqMessageQueue - Disposing message queue .\private$\zen.imobi.input
2014-12-07 01:01:06,510 [80] INFO Rebus.Bus.RebusBus - Rebus bus 1 created
2014-12-07 01:01:06,521 [80] INFO Rebus.Bus.RebusBus - Using external timeout manager with input queue 'rebus.timeout'
2014-12-07 01:01:06,543 [80] INFO Rebus.Bus.RebusBus - Initializing bus with 1 workers
2014-12-07 01:01:06,546 [80] INFO Rebus.Bus.Worker - Worker Rebus 1 worker 1 created and inner thread started
2014-12-07 01:01:06,548 [80] INFO Rebus.Bus.Worker - Starting worker thread Rebus 1 worker 1
2014-12-07 01:01:06,550 [80] INFO Rebus.Bus.RebusBus - Bus started
2014-12-07 01:10:59,087 [91] INFO Rebus.Bus.Worker - Stopping worker thread Rebus 1 worker 1
2014-12-07 01:10:59,093 [89] INFO Rebus.Bus.Worker - Disposing worker thread Rebus 1 worker 1
2014-12-07 01:11:04,591 [89] INFO Rebus.Transports.Msmq.MsmqMessageQueue - Disposing message queue .\private$\zen.imobi.input
2014-12-07 01:35:19,282 [1] INFO Rebus.Bus.RebusBus - Rebus bus 1 created
2014-12-07 01:35:19,345 [1] INFO Rebus.Bus.RebusBus - Using external timeout manager with input queue 'rebus.timeout'
2014-12-07 01:35:19,358 [1] INFO Rebus.Bus.RebusBus - Initializing bus with 1 workers
2014-12-07 01:35:19,397 [1] INFO Rebus.Bus.Worker - Worker Rebus 1 worker 1 created and inner thread started
2014-12-07 01:35:19,405 [1] INFO Rebus.Bus.Worker - Starting worker thread Rebus 1 worker 1
2014-12-07 01:35:19,407 [1] INFO Rebus.Bus.RebusBus - Bus started
2014-12-07 01:39:51,957 [23] INFO Rebus.Bus.Worker - Stopping worker thread Rebus 1 worker 1
2014-12-07 01:39:51,962 [19] INFO Rebus.Bus.Worker - Disposing worker thread Rebus 1 worker 1
2014-12-07 01:39:52,749 [19] INFO Rebus.Transports.Msmq.MsmqMessageQueue - Disposing message queue .\private$\zen.imobi.input
2014-12-07 01:41:17,877 [1] INFO Rebus.Bus.RebusBus - Rebus bus 1 created
2014-12-07 01:41:17,922 [1] INFO Rebus.Bus.RebusBus - Using external timeout manager with input queue 'rebus.timeout'
2014-12-07 01:41:17,932 [1] INFO Rebus.Bus.RebusBus - Initializing bus with 1 workers
2014-12-07 01:41:17,941 [1] INFO Rebus.Bus.Worker - Worker Rebus 1 worker 1 created and inner thread started
2014-12-07 01:41:17,945 [1] INFO Rebus.Bus.Worker - Starting worker thread Rebus 1 worker 1
2014-12-07 01:41:17,946 [1] INFO Rebus.Bus.RebusBus - Bus started
2014-12-07 01:44:47,474 [29] INFO Rebus.Bus.Worker - Stopping worker thread Rebus 1 worker 1
2014-12-07 01:44:47,476 [11] INFO Rebus.Bus.Worker - Disposing worker thread Rebus 1 worker 1
2014-12-07 01:44:51,184 [11] INFO Rebus.Transports.Msmq.MsmqMessageQueue - Disposing message queue .\private$\zen.imobi.input
2014-12-07 01:45:09,903 [1] INFO Rebus.Bus.RebusBus - Rebus bus 1 created
2014-12-07 01:45:09,940 [1] INFO Rebus.Bus.RebusBus - Using external timeout manager with input queue 'rebus.timeout'
2014-12-07 01:45:09,948 [1] INFO Rebus.Bus.RebusBus - Initializing bus with 1 workers
2014-12-07 01:45:09,960 [1] INFO Rebus.Bus.Worker - Worker Rebus 1 worker 1 created and inner thread started
2014-12-07 01:45:09,965 [1] INFO Rebus.Bus.Worker - Starting worker thread Rebus 1 worker 1
2014-12-07 01:45:09,966 [1] INFO Rebus.Bus.RebusBus - Bus started
2014-12-07 01:47:58,554 [20] INFO Rebus.Bus.Worker - Stopping worker thread Rebus 1 worker 1
2014-12-07 01:47:58,561 [41] INFO Rebus.Bus.Worker - Disposing worker thread Rebus 1 worker 1
2014-12-07 01:48:00,888 [41] INFO Rebus.Transports.Msmq.MsmqMessageQueue - Disposing message queue .\private$\zen.imobi.input
2014-12-07 01:50:45,667 [1] INFO Rebus.Bus.RebusBus - Rebus bus 1 created
2014-12-07 01:50:45,727 [1] INFO Rebus.Bus.RebusBus - Using external timeout manager with input queue 'rebus.timeout'
2014-12-07 01:50:45,802 [1] INFO Rebus.Bus.RebusBus - Initializing bus with 1 workers
2014-12-07 01:50:45,827 [1] INFO Rebus.Bus.Worker - Worker Rebus 1 worker 1 created and inner thread started
2014-12-07 01:50:45,832 [1] INFO Rebus.Bus.Worker - Starting worker thread Rebus 1 worker 1
2014-12-07 01:50:45,833 [1] INFO Rebus.Bus.RebusBus - Bus started
2014-12-07 02:11:17,686 [67] INFO Rebus.Bus.Worker - Stopping worker thread Rebus 1 worker 1
2014-12-07 02:11:17,689 [66] INFO Rebus.Bus.Worker - Disposing worker thread Rebus 1 worker 1
2014-12-07 02:11:20,504 [66] INFO Rebus.Transports.Msmq.MsmqMessageQueue - Disposing message queue .\private$\zen.imobi.input
2014-12-07 02:11:34,175 [87] INFO Rebus.Bus.RebusBus - Rebus bus 1 created
2014-12-07 02:11:34,220 [87] INFO Rebus.Bus.RebusBus - Using external timeout manager with input queue 'rebus.timeout'
2014-12-07 02:11:34,232 [87] INFO Rebus.Bus.RebusBus - Initializing bus with 1 workers
2014-12-07 02:11:34,250 [87] INFO Rebus.Bus.Worker - Worker Rebus 1 worker 1 created and inner thread started
2014-12-07 02:11:34,254 [87] INFO Rebus.Bus.Worker - Starting worker thread Rebus 1 worker 1
2014-12-07 02:11:34,255 [87] INFO Rebus.Bus.RebusBus - Bus started
2014-12-07 02:14:46,572 [97] INFO Rebus.Bus.Worker - Stopping worker thread Rebus 1 worker 1
2014-12-07 02:14:46,574 [96] INFO Rebus.Bus.Worker - Disposing worker thread Rebus 1 worker 1
2014-12-07 02:14:52,499 [96] INFO Rebus.Transports.Msmq.MsmqMessageQueue - Disposing message queue .\private$\zen.imobi.input
2014-12-07 02:15:08,095 [1] INFO Rebus.Bus.RebusBus - Rebus bus 1 created
2014-12-07 02:15:08,135 [1] INFO Rebus.Bus.RebusBus - Using external timeout manager with input queue 'rebus.timeout'
2014-12-07 02:15:08,148 [1] INFO Rebus.Bus.RebusBus - Initializing bus with 1 workers
2014-12-07 02:15:08,162 [1] INFO Rebus.Bus.Worker - Worker Rebus 1 worker 1 created and inner thread started
2014-12-07 02:15:08,170 [1] INFO Rebus.Bus.Worker - Starting worker thread Rebus 1 worker 1
2014-12-07 02:15:08,171 [1] INFO Rebus.Bus.RebusBus - Bus started
2014-12-07 02:18:19,391 [103] INFO Rebus.Bus.Worker - Stopping worker thread Rebus 1 worker 1
2014-12-07 02:18:19,394 [101] INFO Rebus.Bus.Worker - Disposing worker thread Rebus 1 worker 1
2014-12-07 02:18:23,206 [101] INFO Rebus.Transports.Msmq.MsmqMessageQueue - Disposing message queue .\private$\zen.imobi.input
2014-12-07 02:19:47,141 [117] INFO Rebus.Bus.RebusBus - Rebus bus 1 created
2014-12-07 02:19:47,195 [117] INFO Rebus.Bus.RebusBus - Using external timeout manager with input queue 'rebus.timeout'
2014-12-07 02:19:47,215 [117] INFO Rebus.Bus.RebusBus - Initializing bus with 1 workers
2014-12-07 02:19:47,231 [117] INFO Rebus.Bus.Worker - Worker Rebus 1 worker 1 created and inner thread started
2014-12-07 02:19:47,238 [117] INFO Rebus.Bus.Worker - Starting worker thread Rebus 1 worker 1
2014-12-07 02:19:47,240 [117] INFO Rebus.Bus.RebusBus - Bus started
2014-12-07 02:26:38,138 [79] INFO Rebus.Bus.Worker - Stopping worker thread Rebus 1 worker 1
2014-12-07 02:26:38,141 [71] INFO Rebus.Bus.Worker - Disposing worker thread Rebus 1 worker 1
2014-12-07 02:26:38,731 [71] INFO Rebus.Transports.Msmq.MsmqMessageQueue - Disposing message queue .\private$\zen.imobi.input
2014-12-07 02:35:13,083 [29] INFO Rebus.Bus.RebusBus - Rebus bus 1 created
2014-12-07 02:35:13,123 [29] INFO Rebus.Bus.RebusBus - Using external timeout manager with input queue 'rebus.timeout'
2014-12-07 02:35:13,133 [29] INFO Rebus.Bus.RebusBus - Initializing bus with 1 workers
2014-12-07 02:35:13,147 [29] INFO Rebus.Bus.Worker - Worker Rebus 1 worker 1 created and inner thread started
2014-12-07 02:35:13,153 [29] INFO Rebus.Bus.Worker - Starting worker thread Rebus 1 worker 1
2014-12-07 02:35:13,154 [29] INFO Rebus.Bus.RebusBus - Bus started
2014-12-07 02:38:08,728 [17] INFO Rebus.Bus.Worker - Stopping worker thread Rebus 1 worker 1
2014-12-07 02:38:08,734 [124] INFO Rebus.Bus.Worker - Disposing worker thread Rebus 1 worker 1
2014-12-07 02:38:10,079 [124] INFO Rebus.Transports.Msmq.MsmqMessageQueue - Disposing message queue .\private$\zen.imobi.input
2014-12-07 02:41:38,677 [1] INFO Rebus.Bus.RebusBus - Rebus bus 1 created
2014-12-07 02:41:38,714 [1] INFO Rebus.Bus.RebusBus - Using external timeout manager with input queue 'rebus.timeout'
2014-12-07 02:41:38,726 [1] INFO Rebus.Bus.RebusBus - Initializing bus with 1 workers
2014-12-07 02:41:38,743 [1] INFO Rebus.Bus.Worker - Worker Rebus 1 worker 1 created and inner thread started
2014-12-07 02:41:38,753 [1] INFO Rebus.Bus.Worker - Starting worker thread Rebus 1 worker 1
2014-12-07 02:41:38,754 [1] INFO Rebus.Bus.RebusBus - Bus started
2014-12-07 02:45:40,949 [157] INFO Rebus.Bus.Worker - Stopping worker thread Rebus 1 worker 1
2014-12-07 02:45:40,952 [143] INFO Rebus.Bus.Worker - Disposing worker thread Rebus 1 worker 1
2014-12-07 02:45:41,889 [143] INFO Rebus.Transports.Msmq.MsmqMessageQueue - Disposing message queue .\private$\zen.imobi.input
2014-12-07 02:48:16,713 [87] INFO Rebus.Bus.RebusBus - Rebus bus 1 created
2014-12-07 02:48:16,761 [87] INFO Rebus.Bus.RebusBus - Using external timeout manager with input queue 'rebus.timeout'
2014-12-07 02:48:16,777 [87] INFO Rebus.Bus.RebusBus - Initializing bus with 1 workers
2014-12-07 02:48:16,795 [87] INFO Rebus.Bus.Worker - Worker Rebus 1 worker 1 created and inner thread started
2014-12-07 02:48:16,800 [87] INFO Rebus.Bus.Worker - Starting worker thread Rebus 1 worker 1
2014-12-07 02:48:16,801 [87] INFO Rebus.Bus.RebusBus - Bus started
2014-12-07 02:52:56,353 [188] INFO Rebus.Bus.Worker - Stopping worker thread Rebus 1 worker 1
2014-12-07 02:52:56,356 [173] INFO Rebus.Bus.Worker - Disposing worker thread Rebus 1 worker 1
2014-12-07 02:53:02,028 [173] INFO Rebus.Transports.Msmq.MsmqMessageQueue - Disposing message queue .\private$\zen.imobi.input
2014-12-07 02:54:13,945 [1] INFO Rebus.Bus.RebusBus - Rebus bus 1 created
2014-12-07 02:54:14,001 [1] INFO Rebus.Bus.RebusBus - Using external timeout manager with input queue 'rebus.timeout'
2014-12-07 02:54:14,032 [1] INFO Rebus.Bus.RebusBus - Initializing bus with 1 workers
2014-12-07 02:54:14,051 [1] INFO Rebus.Bus.Worker - Worker Rebus 1 worker 1 created and inner thread started
2014-12-07 02:54:14,054 [1] INFO Rebus.Bus.Worker - Starting worker thread Rebus 1 worker 1
2014-12-07 02:54:14,056 [1] INFO Rebus.Bus.RebusBus - Bus started
2014-12-07 03:03:34,541 [220] INFO Rebus.Bus.Worker - Stopping worker thread Rebus 1 worker 1
2014-12-07 03:03:34,546 [167] INFO Rebus.Bus.Worker - Disposing worker thread Rebus 1 worker 1
2014-12-07 03:03:38,858 [167] INFO Rebus.Transports.Msmq.MsmqMessageQueue - Disposing message queue .\private$\zen.imobi.input
2014-12-07 03:10:12,336 [253] INFO Rebus.Bus.RebusBus - Rebus bus 1 created
2014-12-07 03:10:12,398 [253] INFO Rebus.Bus.RebusBus - Using external timeout manager with input queue 'rebus.timeout'
2014-12-07 03:10:12,417 [253] INFO Rebus.Bus.RebusBus - Initializing bus with 1 workers
2014-12-07 03:10:12,450 [253] INFO Rebus.Bus.Worker - Worker Rebus 1 worker 1 created and inner thread started
2014-12-07 03:10:12,459 [253] INFO Rebus.Bus.Worker - Starting worker thread Rebus 1 worker 1
2014-12-07 03:10:12,463 [253] INFO Rebus.Bus.RebusBus - Bus started
2014-12-07 03:24:45,363 [280] INFO Rebus.Bus.Worker - Stopping worker thread Rebus 1 worker 1
2014-12-07 03:24:45,366 [264] INFO Rebus.Bus.Worker - Disposing worker thread Rebus 1 worker 1
2014-12-07 03:24:46,483 [264] INFO Rebus.Transports.Msmq.MsmqMessageQueue - Disposing message queue .\private$\zen.imobi.input
2014-12-07 03:28:17,660 [29] INFO Rebus.Bus.RebusBus - Rebus bus 1 created
2014-12-07 03:28:17,696 [29] INFO Rebus.Bus.RebusBus - Using external timeout manager with input queue 'rebus.timeout'
2014-12-07 03:28:17,709 [29] INFO Rebus.Bus.RebusBus - Initializing bus with 1 workers
2014-12-07 03:28:17,724 [29] INFO Rebus.Bus.Worker - Worker Rebus 1 worker 1 created and inner thread started
2014-12-07 03:28:17,730 [29] INFO Rebus.Bus.Worker - Starting worker thread Rebus 1 worker 1
2014-12-07 03:28:17,731 [29] INFO Rebus.Bus.RebusBus - Bus started
2014-12-07 03:39:16,217 [290] INFO Rebus.Bus.Worker - Stopping worker thread Rebus 1 worker 1
2014-12-07 03:39:16,219 [298] INFO Rebus.Bus.Worker - Disposing worker thread Rebus 1 worker 1
2014-12-07 03:39:17,940 [298] INFO Rebus.Transports.Msmq.MsmqMessageQueue - Disposing message queue .\private$\zen.imobi.input
2014-12-07 03:41:00,060 [1] INFO Rebus.Bus.RebusBus - Rebus bus 1 created
2014-12-07 03:41:00,120 [1] INFO Rebus.Bus.RebusBus - Using external timeout manager with input queue 'rebus.timeout'
2014-12-07 03:41:00,137 [1] INFO Rebus.Bus.RebusBus - Initializing bus with 1 workers
2014-12-07 03:41:00,166 [1] INFO Rebus.Bus.Worker - Worker Rebus 1 worker 1 created and inner thread started
2014-12-07 03:41:00,176 [1] INFO Rebus.Bus.Worker - Starting worker thread Rebus 1 worker 1
2014-12-07 03:41:00,179 [1] INFO Rebus.Bus.RebusBus - Bus started
2014-12-07 03:49:24,375 [1] INFO Rebus.Configuration.DetermineMessageOwnershipFromRebusConfigurationSection - Mapping assembly: PropertyLogic
2014-12-07 03:49:24,408 [1] INFO Rebus.Configuration.DetermineMessageOwnershipFromRebusConfigurationSection -     PropertyLogic.Data.IPropertiesRepository -> zen.imobi.input
2014-12-07 03:49:24,409 [1] INFO Rebus.Configuration.DetermineMessageOwnershipFromRebusConfigurationSection -     PropertyLogic.Data.LocationDao -> zen.imobi.input
2014-12-07 03:49:24,416 [1] INFO Rebus.Configuration.DetermineMessageOwnershipFromRebusConfigurationSection -     PropertyLogic.Data.PropertyContext -> zen.imobi.input
2014-12-07 03:49:24,417 [1] INFO Rebus.Configuration.DetermineMessageOwnershipFromRebusConfigurationSection -     PropertyLogic.EventsHandlerSubscriber -> zen.imobi.input
2014-12-07 03:49:24,419 [1] INFO Rebus.Configuration.DetermineMessageOwnershipFromRebusConfigurationSection -     PropertyLogic.Events.PropertyCreated -> zen.imobi.input
2014-12-07 03:49:24,420 [1] INFO Rebus.Configuration.DetermineMessageOwnershipFromRebusConfigurationSection -     PropertyLogic.Location -> zen.imobi.input
2014-12-07 03:49:24,421 [1] INFO Rebus.Configuration.DetermineMessageOwnershipFromRebusConfigurationSection -     PropertyLogic.Data.PropertyDao -> zen.imobi.input
2014-12-07 03:49:24,422 [1] INFO Rebus.Configuration.DetermineMessageOwnershipFromRebusConfigurationSection -     PropertyLogic.Data.PropertiesRepository -> zen.imobi.input
2014-12-07 03:49:24,423 [1] INFO Rebus.Configuration.DetermineMessageOwnershipFromRebusConfigurationSection -     PropertyLogic.Migrations.InitialCommit -> zen.imobi.input
2014-12-07 03:49:24,424 [1] INFO Rebus.Configuration.DetermineMessageOwnershipFromRebusConfigurationSection -     PropertyLogic.Migrations.Configuration -> zen.imobi.input
2014-12-07 03:49:24,426 [1] INFO Rebus.Configuration.DetermineMessageOwnershipFromRebusConfigurationSection -     PropertyLogic.Property -> zen.imobi.input
2014-12-07 03:49:24,427 [1] INFO Rebus.Configuration.DetermineMessageOwnershipFromRebusConfigurationSection -     PropertyLogic.PropertyStatus -> zen.imobi.input
2014-12-07 03:49:24,428 [1] INFO Rebus.Configuration.DetermineMessageOwnershipFromRebusConfigurationSection -     <>f__AnonymousType0`7[<Id>j__TPar,<Country>j__TPar,<ZipCode>j__TPar,<Street>j__TPar,<City>j__TPar,<Latitude>j__TPar,<Longitude>j__TPar] -> zen.imobi.input
2014-12-07 03:49:24,428 [1] INFO Rebus.Configuration.DetermineMessageOwnershipFromRebusConfigurationSection -     <>f__AnonymousType1`4[<Id>j__TPar,<Description>j__TPar,<Status>j__TPar,<UserId>j__TPar] -> zen.imobi.input
2014-12-07 03:49:24,429 [1] INFO Rebus.Configuration.DetermineMessageOwnershipFromRebusConfigurationSection -     System.Diagnostics.Contracts.__ContractsRuntime -> zen.imobi.input
2014-12-07 03:49:24,429 [1] INFO Rebus.Configuration.DetermineMessageOwnershipFromRebusConfigurationSection -     System.Diagnostics.Contracts.RuntimeContractsFlags -> zen.imobi.input
2014-12-07 03:49:24,430 [1] INFO Rebus.Configuration.DetermineMessageOwnershipFromRebusConfigurationSection -     System.Diagnostics.Contracts.RuntimeContractsAttribute -> zen.imobi.input
2014-12-07 03:49:24,431 [1] INFO Rebus.Configuration.DetermineMessageOwnershipFromRebusConfigurationSection -     System.Diagnostics.Contracts.__ContractsRuntime+ContractException -> zen.imobi.input
2014-12-07 03:49:24,431 [1] INFO Rebus.Configuration.DetermineMessageOwnershipFromRebusConfigurationSection -     System.Diagnostics.Contracts.__ContractsRuntime+ContractException+ContractExceptionData -> zen.imobi.input
2014-12-07 03:49:24,502 [1] INFO Rebus.Bus.RebusBus - Rebus bus 1 created
2014-12-07 03:49:24,504 [1] INFO Rebus.Bus.RebusBus - Using external timeout manager with input queue 'rebus.timeout'
2014-12-07 03:49:24,518 [1] INFO Rebus.Bus.RebusBus - Initializing bus with 1 workers
2014-12-07 03:49:24,536 [1] INFO Rebus.Bus.Worker - Worker Rebus 1 worker 1 created and inner thread started
2014-12-07 03:49:24,540 [1] INFO Rebus.Bus.Worker - Starting worker thread Rebus 1 worker 1
2014-12-07 03:49:24,542 [1] INFO Rebus.Bus.RebusBus - Bus started
2014-12-07 03:49:24,842 [Rebus 1 worker 1] INFO Rebus.Bus.SubscriptionMessageHandler - Saving: zen.imobi.input@MSI subscribed to PropertyLogic.Events.PropertyCreated
2014-12-07 03:51:05,709 [Rebus 1 worker 1] WARN Rebus.Bus.RebusBus - User exception in Rebus 1 worker 1: Rebus.MessageHandleException: Could not handle message with ID c1071bc9-6713-48a6-8955-afc56f3cf1d9\3 ---> System.ArgumentException: An error occurred while attempting to deserialize JSON text '{
  "$type": "System.Object[], mscorlib",
  "$values": [
    {
      "$type": "PropertyLogic.Events.PropertyCreated, PropertyLogic",
      "PropertyId": "00000000-0000-0000-0000-000000000000",
      "Date": "2014-12-07T03:49:40.590933+01:00",
      "UserId": "a9b39f6c-631d-472a-84df-313d37421a70"
    }
  ]
}' into an object[] ---> System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.ArgumentNullException: Precondition failed: value != Guid.Empty
   at System.Diagnostics.Contracts.__ContractsRuntime.Requires[TException](Boolean condition, String msg, String conditionTxt) in d:\projects\Zen.Imobi\Base\Data\Repository.cs:line 0
   at Base.Guard.AgainstNullOrEmpty(Guid value) in d:\projects\Zen.Imobi\Base\Guard.cs:line 16
   at PropertyLogic.Events.PropertyCreated..ctor(Guid userId, Guid propertyId) in d:\projects\Zen.Imobi\PropertyLogic\Events\PropertyCreated.cs:line 14
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.ConstructorInfo.Invoke(Object[] parameters)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(JsonReader reader, JsonObjectContract contract, JsonProperty containerProperty, ConstructorInfo constructorInfo, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(JsonReader reader, JsonObjectContract objectContract, JsonProperty containerMember, JsonProperty containerProperty, String id, Boolean& createdFromNonDefaultConstructor)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IWrappedCollection wrappedList, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(JsonReader reader, Type& objectType, JsonContract& contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue, Object& newValue, String& id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, JsonSerializerSettings settings)
   at Rebus.Serialization.Json.JsonMessageSerializer.Deserialize(ReceivedTransportMessage transportMessage)
   --- End of inner exception stack trace ---
   at Rebus.Serialization.Json.JsonMessageSerializer.Deserialize(ReceivedTransportMessage transportMessage)
   at Rebus.Bus.Worker.<DoTry>d__25.MoveNext()
   --- End of inner exception stack trace ---
   at Rebus.Bus.Worker.<DoTry>d__25.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Rebus.Bus.Worker.<TryProcessIncomingMessage>d__1d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.<ThrowAsync>b__3(Object state)
   at Rebus.Bus.RebusSynchronizationContext.Run()
   at Rebus.Bus.Worker.MainLoop()
2014-12-07 03:51:07,896 [Rebus 1 worker 1] WARN Rebus.Bus.RebusBus - User exception in Rebus 1 worker 1: Rebus.MessageHandleException: Could not handle message with ID c1071bc9-6713-48a6-8955-afc56f3cf1d9\3 ---> System.ArgumentException: An error occurred while attempting to deserialize JSON text '{
  "$type": "System.Object[], mscorlib",
  "$values": [
    {
      "$type": "PropertyLogic.Events.PropertyCreated, PropertyLogic",
      "PropertyId": "00000000-0000-0000-0000-000000000000",
      "Date": "2014-12-07T03:49:40.590933+01:00",
      "UserId": "a9b39f6c-631d-472a-84df-313d37421a70"
    }
  ]
}' into an object[] ---> System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.ArgumentNullException: Precondition failed: value != Guid.Empty
   at System.Diagnostics.Contracts.__ContractsRuntime.Requires[TException](Boolean condition, String msg, String conditionTxt) in d:\projects\Zen.Imobi\Base\Data\Repository.cs:line 0
   at Base.Guard.AgainstNullOrEmpty(Guid value) in d:\projects\Zen.Imobi\Base\Guard.cs:line 16
   at PropertyLogic.Events.PropertyCreated..ctor(Guid userId, Guid propertyId) in d:\projects\Zen.Imobi\PropertyLogic\Events\PropertyCreated.cs:line 14
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.ConstructorInfo.Invoke(Object[] parameters)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(JsonReader reader, JsonObjectContract contract, JsonProperty containerProperty, ConstructorInfo constructorInfo, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(JsonReader reader, JsonObjectContract objectContract, JsonProperty containerMember, JsonProperty containerProperty, String id, Boolean& createdFromNonDefaultConstructor)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IWrappedCollection wrappedList, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(JsonReader reader, Type& objectType, JsonContract& contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue, Object& newValue, String& id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, JsonSerializerSettings settings)
   at Rebus.Serialization.Json.JsonMessageSerializer.Deserialize(ReceivedTransportMessage transportMessage)
   --- End of inner exception stack trace ---
   at Rebus.Serialization.Json.JsonMessageSerializer.Deserialize(ReceivedTransportMessage transportMessage)
   at Rebus.Bus.Worker.<DoTry>d__25.MoveNext()
   --- End of inner exception stack trace ---
   at Rebus.Bus.Worker.<DoTry>d__25.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Rebus.Bus.Worker.<TryProcessIncomingMessage>d__1d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.<ThrowAsync>b__3(Object state)
   at Rebus.Bus.RebusSynchronizationContext.Run()
   at Rebus.Bus.Worker.MainLoop()
2014-12-07 03:51:09,053 [Rebus 1 worker 1] WARN Rebus.Bus.RebusBus - User exception in Rebus 1 worker 1: Rebus.MessageHandleException: Could not handle message with ID c1071bc9-6713-48a6-8955-afc56f3cf1d9\3 ---> System.ArgumentException: An error occurred while attempting to deserialize JSON text '{
  "$type": "System.Object[], mscorlib",
  "$values": [
    {
      "$type": "PropertyLogic.Events.PropertyCreated, PropertyLogic",
      "PropertyId": "00000000-0000-0000-0000-000000000000",
      "Date": "2014-12-07T03:49:40.590933+01:00",
      "UserId": "a9b39f6c-631d-472a-84df-313d37421a70"
    }
  ]
}' into an object[] ---> System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.ArgumentNullException: Precondition failed: value != Guid.Empty
   at System.Diagnostics.Contracts.__ContractsRuntime.Requires[TException](Boolean condition, String msg, String conditionTxt) in d:\projects\Zen.Imobi\Base\Data\Repository.cs:line 0
   at Base.Guard.AgainstNullOrEmpty(Guid value) in d:\projects\Zen.Imobi\Base\Guard.cs:line 16
   at PropertyLogic.Events.PropertyCreated..ctor(Guid userId, Guid propertyId) in d:\projects\Zen.Imobi\PropertyLogic\Events\PropertyCreated.cs:line 14
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.ConstructorInfo.Invoke(Object[] parameters)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(JsonReader reader, JsonObjectContract contract, JsonProperty containerProperty, ConstructorInfo constructorInfo, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(JsonReader reader, JsonObjectContract objectContract, JsonProperty containerMember, JsonProperty containerProperty, String id, Boolean& createdFromNonDefaultConstructor)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IWrappedCollection wrappedList, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(JsonReader reader, Type& objectType, JsonContract& contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue, Object& newValue, String& id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, JsonSerializerSettings settings)
   at Rebus.Serialization.Json.JsonMessageSerializer.Deserialize(ReceivedTransportMessage transportMessage)
   --- End of inner exception stack trace ---
   at Rebus.Serialization.Json.JsonMessageSerializer.Deserialize(ReceivedTransportMessage transportMessage)
   at Rebus.Bus.Worker.<DoTry>d__25.MoveNext()
   --- End of inner exception stack trace ---
   at Rebus.Bus.Worker.<DoTry>d__25.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Rebus.Bus.Worker.<TryProcessIncomingMessage>d__1d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.<ThrowAsync>b__3(Object state)
   at Rebus.Bus.RebusSynchronizationContext.Run()
   at Rebus.Bus.Worker.MainLoop()
2014-12-07 03:51:11,477 [Rebus 1 worker 1] WARN Rebus.Bus.RebusBus - User exception in Rebus 1 worker 1: Rebus.MessageHandleException: Could not handle message with ID c1071bc9-6713-48a6-8955-afc56f3cf1d9\3 ---> System.ArgumentException: An error occurred while attempting to deserialize JSON text '{
  "$type": "System.Object[], mscorlib",
  "$values": [
    {
      "$type": "PropertyLogic.Events.PropertyCreated, PropertyLogic",
      "PropertyId": "00000000-0000-0000-0000-000000000000",
      "Date": "2014-12-07T03:49:40.590933+01:00",
      "UserId": "a9b39f6c-631d-472a-84df-313d37421a70"
    }
  ]
}' into an object[] ---> System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.ArgumentNullException: Precondition failed: value != Guid.Empty
   at System.Diagnostics.Contracts.__ContractsRuntime.Requires[TException](Boolean condition, String msg, String conditionTxt) in d:\projects\Zen.Imobi\Base\Data\Repository.cs:line 0
   at Base.Guard.AgainstNullOrEmpty(Guid value) in d:\projects\Zen.Imobi\Base\Guard.cs:line 16
   at PropertyLogic.Events.PropertyCreated..ctor(Guid userId, Guid propertyId) in d:\projects\Zen.Imobi\PropertyLogic\Events\PropertyCreated.cs:line 14
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.ConstructorInfo.Invoke(Object[] parameters)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(JsonReader reader, JsonObjectContract contract, JsonProperty containerProperty, ConstructorInfo constructorInfo, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(JsonReader reader, JsonObjectContract objectContract, JsonProperty containerMember, JsonProperty containerProperty, String id, Boolean& createdFromNonDefaultConstructor)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IWrappedCollection wrappedList, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(JsonReader reader, Type& objectType, JsonContract& contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue, Object& newValue, String& id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, JsonSerializerSettings settings)
   at Rebus.Serialization.Json.JsonMessageSerializer.Deserialize(ReceivedTransportMessage transportMessage)
   --- End of inner exception stack trace ---
   at Rebus.Serialization.Json.JsonMessageSerializer.Deserialize(ReceivedTransportMessage transportMessage)
   at Rebus.Bus.Worker.<DoTry>d__25.MoveNext()
   --- End of inner exception stack trace ---
   at Rebus.Bus.Worker.<DoTry>d__25.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Rebus.Bus.Worker.<TryProcessIncomingMessage>d__1d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.<ThrowAsync>b__3(Object state)
   at Rebus.Bus.RebusSynchronizationContext.Run()
   at Rebus.Bus.Worker.MainLoop()
2014-12-07 03:51:11,481 [Rebus 1 worker 1] WARN Rebus.Bus.RebusBus - User exception in Rebus 1 worker 1: Rebus.MessageHandleException: Could not handle message with ID c1071bc9-6713-48a6-8955-afc56f3cf1d9\3 ---> System.ArgumentException: An error occurred while attempting to deserialize JSON text '{
  "$type": "System.Object[], mscorlib",
  "$values": [
    {
      "$type": "PropertyLogic.Events.PropertyCreated, PropertyLogic",
      "PropertyId": "00000000-0000-0000-0000-000000000000",
      "Date": "2014-12-07T03:49:40.590933+01:00",
      "UserId": "a9b39f6c-631d-472a-84df-313d37421a70"
    }
  ]
}' into an object[] ---> System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.ArgumentNullException: Precondition failed: value != Guid.Empty
   at System.Diagnostics.Contracts.__ContractsRuntime.Requires[TException](Boolean condition, String msg, String conditionTxt) in d:\projects\Zen.Imobi\Base\Data\Repository.cs:line 0
   at Base.Guard.AgainstNullOrEmpty(Guid value) in d:\projects\Zen.Imobi\Base\Guard.cs:line 16
   at PropertyLogic.Events.PropertyCreated..ctor(Guid userId, Guid propertyId) in d:\projects\Zen.Imobi\PropertyLogic\Events\PropertyCreated.cs:line 14
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.ConstructorInfo.Invoke(Object[] parameters)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(JsonReader reader, JsonObjectContract contract, JsonProperty containerProperty, ConstructorInfo constructorInfo, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(JsonReader reader, JsonObjectContract objectContract, JsonProperty containerMember, JsonProperty containerProperty, String id, Boolean& createdFromNonDefaultConstructor)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IWrappedCollection wrappedList, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(JsonReader reader, Type& objectType, JsonContract& contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue, Object& newValue, String& id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, JsonSerializerSettings settings)
   at Rebus.Serialization.Json.JsonMessageSerializer.Deserialize(ReceivedTransportMessage transportMessage)
   --- End of inner exception stack trace ---
   at Rebus.Serialization.Json.JsonMessageSerializer.Deserialize(ReceivedTransportMessage transportMessage)
   at Rebus.Bus.Worker.<DoTry>d__25.MoveNext()
   --- End of inner exception stack trace ---
   at Rebus.Bus.Worker.<DoTry>d__25.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Rebus.Bus.Worker.<TryProcessIncomingMessage>d__1d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.<ThrowAsync>b__3(Object state)
   at Rebus.Bus.RebusSynchronizationContext.Run()
   at Rebus.Bus.Worker.MainLoop()
2014-12-07 03:51:11,486 [Rebus 1 worker 1] ERROR Rebus.Bus.Worker - Handling message c1071bc9-6713-48a6-8955-afc56f3cf1d9\3 has failed the maximum number of times - details: 12/7/2014 3:51:05 AM:
System.ArgumentException: An error occurred while attempting to deserialize JSON text '{
  "$type": "System.Object[], mscorlib",
  "$values": [
    {
      "$type": "PropertyLogic.Events.PropertyCreated, PropertyLogic",
      "PropertyId": "00000000-0000-0000-0000-000000000000",
      "Date": "2014-12-07T03:49:40.590933+01:00",
      "UserId": "a9b39f6c-631d-472a-84df-313d37421a70"
    }
  ]
}' into an object[] ---> System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.ArgumentNullException: Precondition failed: value != Guid.Empty
   at System.Diagnostics.Contracts.__ContractsRuntime.Requires[TException](Boolean condition, String msg, String conditionTxt) in d:\projects\Zen.Imobi\Base\Data\Repository.cs:line 0
   at Base.Guard.AgainstNullOrEmpty(Guid value) in d:\projects\Zen.Imobi\Base\Guard.cs:line 16
   at PropertyLogic.Events.PropertyCreated..ctor(Guid userId, Guid propertyId) in d:\projects\Zen.Imobi\PropertyLogic\Events\PropertyCreated.cs:line 14
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.ConstructorInfo.Invoke(Object[] parameters)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(JsonReader reader, JsonObjectContract contract, JsonProperty containerProperty, ConstructorInfo constructorInfo, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(JsonReader reader, JsonObjectContract objectContract, JsonProperty containerMember, JsonProperty containerProperty, String id, Boolean& createdFromNonDefaultConstructor)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IWrappedCollection wrappedList, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(JsonReader reader, Type& objectType, JsonContract& contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue, Object& newValue, String& id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, JsonSerializerSettings settings)
   at Rebus.Serialization.Json.JsonMessageSerializer.Deserialize(ReceivedTransportMessage transportMessage)
   --- End of inner exception stack trace ---
   at Rebus.Serialization.Json.JsonMessageSerializer.Deserialize(ReceivedTransportMessage transportMessage)
   at Rebus.Bus.Worker.<DoTry>d__25.MoveNext()

12/7/2014 3:51:07 AM:
System.ArgumentException: An error occurred while attempting to deserialize JSON text '{
  "$type": "System.Object[], mscorlib",
  "$values": [
    {
      "$type": "PropertyLogic.Events.PropertyCreated, PropertyLogic",
      "PropertyId": "00000000-0000-0000-0000-000000000000",
      "Date": "2014-12-07T03:49:40.590933+01:00",
      "UserId": "a9b39f6c-631d-472a-84df-313d37421a70"
    }
  ]
}' into an object[] ---> System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.ArgumentNullException: Precondition failed: value != Guid.Empty
   at System.Diagnostics.Contracts.__ContractsRuntime.Requires[TException](Boolean condition, String msg, String conditionTxt) in d:\projects\Zen.Imobi\Base\Data\Repository.cs:line 0
   at Base.Guard.AgainstNullOrEmpty(Guid value) in d:\projects\Zen.Imobi\Base\Guard.cs:line 16
   at PropertyLogic.Events.PropertyCreated..ctor(Guid userId, Guid propertyId) in d:\projects\Zen.Imobi\PropertyLogic\Events\PropertyCreated.cs:line 14
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.ConstructorInfo.Invoke(Object[] parameters)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(JsonReader reader, JsonObjectContract contract, JsonProperty containerProperty, ConstructorInfo constructorInfo, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(JsonReader reader, JsonObjectContract objectContract, JsonProperty containerMember, JsonProperty containerProperty, String id, Boolean& createdFromNonDefaultConstructor)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IWrappedCollection wrappedList, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(JsonReader reader, Type& objectType, JsonContract& contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue, Object& newValue, String& id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, JsonSerializerSettings settings)
   at Rebus.Serialization.Json.JsonMessageSerializer.Deserialize(ReceivedTransportMessage transportMessage)
   --- End of inner exception stack trace ---
   at Rebus.Serialization.Json.JsonMessageSerializer.Deserialize(ReceivedTransportMessage transportMessage)
   at Rebus.Bus.Worker.<DoTry>d__25.MoveNext()

12/7/2014 3:51:09 AM:
System.ArgumentException: An error occurred while attempting to deserialize JSON text '{
  "$type": "System.Object[], mscorlib",
  "$values": [
    {
      "$type": "PropertyLogic.Events.PropertyCreated, PropertyLogic",
      "PropertyId": "00000000-0000-0000-0000-000000000000",
      "Date": "2014-12-07T03:49:40.590933+01:00",
      "UserId": "a9b39f6c-631d-472a-84df-313d37421a70"
    }
  ]
}' into an object[] ---> System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.ArgumentNullException: Precondition failed: value != Guid.Empty
   at System.Diagnostics.Contracts.__ContractsRuntime.Requires[TException](Boolean condition, String msg, String conditionTxt) in d:\projects\Zen.Imobi\Base\Data\Repository.cs:line 0
   at Base.Guard.AgainstNullOrEmpty(Guid value) in d:\projects\Zen.Imobi\Base\Guard.cs:line 16
   at PropertyLogic.Events.PropertyCreated..ctor(Guid userId, Guid propertyId) in d:\projects\Zen.Imobi\PropertyLogic\Events\PropertyCreated.cs:line 14
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.ConstructorInfo.Invoke(Object[] parameters)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(JsonReader reader, JsonObjectContract contract, JsonProperty containerProperty, ConstructorInfo constructorInfo, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(JsonReader reader, JsonObjectContract objectContract, JsonProperty containerMember, JsonProperty containerProperty, String id, Boolean& createdFromNonDefaultConstructor)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IWrappedCollection wrappedList, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(JsonReader reader, Type& objectType, JsonContract& contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue, Object& newValue, String& id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, JsonSerializerSettings settings)
   at Rebus.Serialization.Json.JsonMessageSerializer.Deserialize(ReceivedTransportMessage transportMessage)
   --- End of inner exception stack trace ---
   at Rebus.Serialization.Json.JsonMessageSerializer.Deserialize(ReceivedTransportMessage transportMessage)
   at Rebus.Bus.Worker.<DoTry>d__25.MoveNext()

12/7/2014 3:51:11 AM:
System.ArgumentException: An error occurred while attempting to deserialize JSON text '{
  "$type": "System.Object[], mscorlib",
  "$values": [
    {
      "$type": "PropertyLogic.Events.PropertyCreated, PropertyLogic",
      "PropertyId": "00000000-0000-0000-0000-000000000000",
      "Date": "2014-12-07T03:49:40.590933+01:00",
      "UserId": "a9b39f6c-631d-472a-84df-313d37421a70"
    }
  ]
}' into an object[] ---> System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.ArgumentNullException: Precondition failed: value != Guid.Empty
   at System.Diagnostics.Contracts.__ContractsRuntime.Requires[TException](Boolean condition, String msg, String conditionTxt) in d:\projects\Zen.Imobi\Base\Data\Repository.cs:line 0
   at Base.Guard.AgainstNullOrEmpty(Guid value) in d:\projects\Zen.Imobi\Base\Guard.cs:line 16
   at PropertyLogic.Events.PropertyCreated..ctor(Guid userId, Guid propertyId) in d:\projects\Zen.Imobi\PropertyLogic\Events\PropertyCreated.cs:line 14
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.ConstructorInfo.Invoke(Object[] parameters)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(JsonReader reader, JsonObjectContract contract, JsonProperty containerProperty, ConstructorInfo constructorInfo, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(JsonReader reader, JsonObjectContract objectContract, JsonProperty containerMember, JsonProperty containerProperty, String id, Boolean& createdFromNonDefaultConstructor)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IWrappedCollection wrappedList, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(JsonReader reader, Type& objectType, JsonContract& contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue, Object& newValue, String& id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, JsonSerializerSettings settings)
   at Rebus.Serialization.Json.JsonMessageSerializer.Deserialize(ReceivedTransportMessage transportMessage)
   --- End of inner exception stack trace ---
   at Rebus.Serialization.Json.JsonMessageSerializer.Deserialize(ReceivedTransportMessage transportMessage)
   at Rebus.Bus.Worker.<DoTry>d__25.MoveNext()

12/7/2014 3:51:11 AM:
System.ArgumentException: An error occurred while attempting to deserialize JSON text '{
  "$type": "System.Object[], mscorlib",
  "$values": [
    {
      "$type": "PropertyLogic.Events.PropertyCreated, PropertyLogic",
      "PropertyId": "00000000-0000-0000-0000-000000000000",
      "Date": "2014-12-07T03:49:40.590933+01:00",
      "UserId": "a9b39f6c-631d-472a-84df-313d37421a70"
    }
  ]
}' into an object[] ---> System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.ArgumentNullException: Precondition failed: value != Guid.Empty
   at System.Diagnostics.Contracts.__ContractsRuntime.Requires[TException](Boolean condition, String msg, String conditionTxt) in d:\projects\Zen.Imobi\Base\Data\Repository.cs:line 0
   at Base.Guard.AgainstNullOrEmpty(Guid value) in d:\projects\Zen.Imobi\Base\Guard.cs:line 16
   at PropertyLogic.Events.PropertyCreated..ctor(Guid userId, Guid propertyId) in d:\projects\Zen.Imobi\PropertyLogic\Events\PropertyCreated.cs:line 14
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.ConstructorInfo.Invoke(Object[] parameters)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(JsonReader reader, JsonObjectContract contract, JsonProperty containerProperty, ConstructorInfo constructorInfo, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(JsonReader reader, JsonObjectContract objectContract, JsonProperty containerMember, JsonProperty containerProperty, String id, Boolean& createdFromNonDefaultConstructor)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IWrappedCollection wrappedList, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(JsonReader reader, Type& objectType, JsonContract& contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue, Object& newValue, String& id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, JsonSerializerSettings settings)
   at Rebus.Serialization.Json.JsonMessageSerializer.Deserialize(ReceivedTransportMessage transportMessage)
   --- End of inner exception stack trace ---
   at Rebus.Serialization.Json.JsonMessageSerializer.Deserialize(ReceivedTransportMessage transportMessage)
   at Rebus.Bus.Worker.<DoTry>d__25.MoveNext()
2014-12-07 03:51:11,490 [Rebus 1 worker 1] WARN Rebus.Bus.RebusBus - Message PropertyLogic.Events.PropertyCreated is forwarded to error queue
2014-12-07 03:53:05,830 [Rebus 1 worker 1] WARN Rebus.Bus.RebusBus - User exception in Rebus 1 worker 1: Rebus.MessageHandleException: Could not handle message with ID c1071bc9-6713-48a6-8955-afc56f3cf1d9\7 ---> System.ArgumentException: An error occurred while attempting to deserialize JSON text '{
  "$type": "System.Object[], mscorlib",
  "$values": [
    {
      "$type": "PropertyLogic.Events.PropertyCreated, PropertyLogic",
      "PropertyId": "00000000-0000-0000-0000-000000000000",
      "Date": "2014-12-07T03:53:05.806136+01:00",
      "UserId": "a9b39f6c-631d-472a-84df-313d37421a70"
    }
  ]
}' into an object[] ---> System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.ArgumentNullException: Precondition failed: value != Guid.Empty
   at System.Diagnostics.Contracts.__ContractsRuntime.Requires[TException](Boolean condition, String msg, String conditionTxt) in d:\projects\Zen.Imobi\Base\Data\Repository.cs:line 0
   at Base.Guard.AgainstNullOrEmpty(Guid value) in d:\projects\Zen.Imobi\Base\Guard.cs:line 16
   at PropertyLogic.Events.PropertyCreated..ctor(Guid userId, Guid propertyId) in d:\projects\Zen.Imobi\PropertyLogic\Events\PropertyCreated.cs:line 14
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.ConstructorInfo.Invoke(Object[] parameters)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(JsonReader reader, JsonObjectContract contract, JsonProperty containerProperty, ConstructorInfo constructorInfo, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(JsonReader reader, JsonObjectContract objectContract, JsonProperty containerMember, JsonProperty containerProperty, String id, Boolean& createdFromNonDefaultConstructor)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IWrappedCollection wrappedList, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(JsonReader reader, Type& objectType, JsonContract& contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue, Object& newValue, String& id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, JsonSerializerSettings settings)
   at Rebus.Serialization.Json.JsonMessageSerializer.Deserialize(ReceivedTransportMessage transportMessage)
   --- End of inner exception stack trace ---
   at Rebus.Serialization.Json.JsonMessageSerializer.Deserialize(ReceivedTransportMessage transportMessage)
   at Rebus.Bus.Worker.<DoTry>d__25.MoveNext()
   --- End of inner exception stack trace ---
   at Rebus.Bus.Worker.<DoTry>d__25.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Rebus.Bus.Worker.<TryProcessIncomingMessage>d__1d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.<ThrowAsync>b__3(Object state)
   at Rebus.Bus.RebusSynchronizationContext.Run()
   at Rebus.Bus.Worker.MainLoop()
2014-12-07 03:53:05,840 [Rebus 1 worker 1] WARN Rebus.Bus.RebusBus - User exception in Rebus 1 worker 1: Rebus.MessageHandleException: Could not handle message with ID c1071bc9-6713-48a6-8955-afc56f3cf1d9\7 ---> System.ArgumentException: An error occurred while attempting to deserialize JSON text '{
  "$type": "System.Object[], mscorlib",
  "$values": [
    {
      "$type": "PropertyLogic.Events.PropertyCreated, PropertyLogic",
      "PropertyId": "00000000-0000-0000-0000-000000000000",
      "Date": "2014-12-07T03:53:05.806136+01:00",
      "UserId": "a9b39f6c-631d-472a-84df-313d37421a70"
    }
  ]
}' into an object[] ---> System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.ArgumentNullException: Precondition failed: value != Guid.Empty
   at System.Diagnostics.Contracts.__ContractsRuntime.Requires[TException](Boolean condition, String msg, String conditionTxt) in d:\projects\Zen.Imobi\Base\Data\Repository.cs:line 0
   at Base.Guard.AgainstNullOrEmpty(Guid value) in d:\projects\Zen.Imobi\Base\Guard.cs:line 16
   at PropertyLogic.Events.PropertyCreated..ctor(Guid userId, Guid propertyId) in d:\projects\Zen.Imobi\PropertyLogic\Events\PropertyCreated.cs:line 14
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.ConstructorInfo.Invoke(Object[] parameters)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(JsonReader reader, JsonObjectContract contract, JsonProperty containerProperty, ConstructorInfo constructorInfo, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(JsonReader reader, JsonObjectContract objectContract, JsonProperty containerMember, JsonProperty containerProperty, String id, Boolean& createdFromNonDefaultConstructor)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IWrappedCollection wrappedList, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(JsonReader reader, Type& objectType, JsonContract& contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue, Object& newValue, String& id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, JsonSerializerSettings settings)
   at Rebus.Serialization.Json.JsonMessageSerializer.Deserialize(ReceivedTransportMessage transportMessage)
   --- End of inner exception stack trace ---
   at Rebus.Serialization.Json.JsonMessageSerializer.Deserialize(ReceivedTransportMessage transportMessage)
   at Rebus.Bus.Worker.<DoTry>d__25.MoveNext()
   --- End of inner exception stack trace ---
   at Rebus.Bus.Worker.<DoTry>d__25.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Rebus.Bus.Worker.<TryProcessIncomingMessage>d__1d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.<ThrowAsync>b__3(Object state)
   at Rebus.Bus.RebusSynchronizationContext.Run()
   at Rebus.Bus.Worker.MainLoop()
2014-12-07 03:53:05,845 [Rebus 1 worker 1] WARN Rebus.Bus.RebusBus - User exception in Rebus 1 worker 1: Rebus.MessageHandleException: Could not handle message with ID c1071bc9-6713-48a6-8955-afc56f3cf1d9\7 ---> System.ArgumentException: An error occurred while attempting to deserialize JSON text '{
  "$type": "System.Object[], mscorlib",
  "$values": [
    {
      "$type": "PropertyLogic.Events.PropertyCreated, PropertyLogic",
      "PropertyId": "00000000-0000-0000-0000-000000000000",
      "Date": "2014-12-07T03:53:05.806136+01:00",
      "UserId": "a9b39f6c-631d-472a-84df-313d37421a70"
    }
  ]
}' into an object[] ---> System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.ArgumentNullException: Precondition failed: value != Guid.Empty
   at System.Diagnostics.Contracts.__ContractsRuntime.Requires[TException](Boolean condition, String msg, String conditionTxt) in d:\projects\Zen.Imobi\Base\Data\Repository.cs:line 0
   at Base.Guard.AgainstNullOrEmpty(Guid value) in d:\projects\Zen.Imobi\Base\Guard.cs:line 16
   at PropertyLogic.Events.PropertyCreated..ctor(Guid userId, Guid propertyId) in d:\projects\Zen.Imobi\PropertyLogic\Events\PropertyCreated.cs:line 14
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.ConstructorInfo.Invoke(Object[] parameters)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(JsonReader reader, JsonObjectContract contract, JsonProperty containerProperty, ConstructorInfo constructorInfo, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(JsonReader reader, JsonObjectContract objectContract, JsonProperty containerMember, JsonProperty containerProperty, String id, Boolean& createdFromNonDefaultConstructor)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IWrappedCollection wrappedList, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(JsonReader reader, Type& objectType, JsonContract& contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue, Object& newValue, String& id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, JsonSerializerSettings settings)
   at Rebus.Serialization.Json.JsonMessageSerializer.Deserialize(ReceivedTransportMessage transportMessage)
   --- End of inner exception stack trace ---
   at Rebus.Serialization.Json.JsonMessageSerializer.Deserialize(ReceivedTransportMessage transportMessage)
   at Rebus.Bus.Worker.<DoTry>d__25.MoveNext()
   --- End of inner exception stack trace ---
   at Rebus.Bus.Worker.<DoTry>d__25.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Rebus.Bus.Worker.<TryProcessIncomingMessage>d__1d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.<ThrowAsync>b__3(Object state)
   at Rebus.Bus.RebusSynchronizationContext.Run()
   at Rebus.Bus.Worker.MainLoop()
2014-12-07 03:53:05,856 [Rebus 1 worker 1] WARN Rebus.Bus.RebusBus - User exception in Rebus 1 worker 1: Rebus.MessageHandleException: Could not handle message with ID c1071bc9-6713-48a6-8955-afc56f3cf1d9\7 ---> System.ArgumentException: An error occurred while attempting to deserialize JSON text '{
  "$type": "System.Object[], mscorlib",
  "$values": [
    {
      "$type": "PropertyLogic.Events.PropertyCreated, PropertyLogic",
      "PropertyId": "00000000-0000-0000-0000-000000000000",
      "Date": "2014-12-07T03:53:05.806136+01:00",
      "UserId": "a9b39f6c-631d-472a-84df-313d37421a70"
    }
  ]
}' into an object[] ---> System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.ArgumentNullException: Precondition failed: value != Guid.Empty
   at System.Diagnostics.Contracts.__ContractsRuntime.Requires[TException](Boolean condition, String msg, String conditionTxt) in d:\projects\Zen.Imobi\Base\Data\Repository.cs:line 0
   at Base.Guard.AgainstNullOrEmpty(Guid value) in d:\projects\Zen.Imobi\Base\Guard.cs:line 16
   at PropertyLogic.Events.PropertyCreated..ctor(Guid userId, Guid propertyId) in d:\projects\Zen.Imobi\PropertyLogic\Events\PropertyCreated.cs:line 14
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.ConstructorInfo.Invoke(Object[] parameters)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(JsonReader reader, JsonObjectContract contract, JsonProperty containerProperty, ConstructorInfo constructorInfo, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(JsonReader reader, JsonObjectContract objectContract, JsonProperty containerMember, JsonProperty containerProperty, String id, Boolean& createdFromNonDefaultConstructor)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IWrappedCollection wrappedList, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(JsonReader reader, Type& objectType, JsonContract& contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue, Object& newValue, String& id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, JsonSerializerSettings settings)
   at Rebus.Serialization.Json.JsonMessageSerializer.Deserialize(ReceivedTransportMessage transportMessage)
   --- End of inner exception stack trace ---
   at Rebus.Serialization.Json.JsonMessageSerializer.Deserialize(ReceivedTransportMessage transportMessage)
   at Rebus.Bus.Worker.<DoTry>d__25.MoveNext()
   --- End of inner exception stack trace ---
   at Rebus.Bus.Worker.<DoTry>d__25.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Rebus.Bus.Worker.<TryProcessIncomingMessage>d__1d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.<ThrowAsync>b__3(Object state)
   at Rebus.Bus.RebusSynchronizationContext.Run()
   at Rebus.Bus.Worker.MainLoop()
2014-12-07 03:53:05,862 [Rebus 1 worker 1] WARN Rebus.Bus.RebusBus - User exception in Rebus 1 worker 1: Rebus.MessageHandleException: Could not handle message with ID c1071bc9-6713-48a6-8955-afc56f3cf1d9\7 ---> System.ArgumentException: An error occurred while attempting to deserialize JSON text '{
  "$type": "System.Object[], mscorlib",
  "$values": [
    {
      "$type": "PropertyLogic.Events.PropertyCreated, PropertyLogic",
      "PropertyId": "00000000-0000-0000-0000-000000000000",
      "Date": "2014-12-07T03:53:05.806136+01:00",
      "UserId": "a9b39f6c-631d-472a-84df-313d37421a70"
    }
  ]
}' into an object[] ---> System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.ArgumentNullException: Precondition failed: value != Guid.Empty
   at System.Diagnostics.Contracts.__ContractsRuntime.Requires[TException](Boolean condition, String msg, String conditionTxt) in d:\projects\Zen.Imobi\Base\Data\Repository.cs:line 0
   at Base.Guard.AgainstNullOrEmpty(Guid value) in d:\projects\Zen.Imobi\Base\Guard.cs:line 16
   at PropertyLogic.Events.PropertyCreated..ctor(Guid userId, Guid propertyId) in d:\projects\Zen.Imobi\PropertyLogic\Events\PropertyCreated.cs:line 14
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.ConstructorInfo.Invoke(Object[] parameters)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(JsonReader reader, JsonObjectContract contract, JsonProperty containerProperty, ConstructorInfo constructorInfo, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(JsonReader reader, JsonObjectContract objectContract, JsonProperty containerMember, JsonProperty containerProperty, String id, Boolean& createdFromNonDefaultConstructor)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IWrappedCollection wrappedList, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(JsonReader reader, Type& objectType, JsonContract& contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue, Object& newValue, String& id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, JsonSerializerSettings settings)
   at Rebus.Serialization.Json.JsonMessageSerializer.Deserialize(ReceivedTransportMessage transportMessage)
   --- End of inner exception stack trace ---
   at Rebus.Serialization.Json.JsonMessageSerializer.Deserialize(ReceivedTransportMessage transportMessage)
   at Rebus.Bus.Worker.<DoTry>d__25.MoveNext()
   --- End of inner exception stack trace ---
   at Rebus.Bus.Worker.<DoTry>d__25.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Rebus.Bus.Worker.<TryProcessIncomingMessage>d__1d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.<ThrowAsync>b__3(Object state)
   at Rebus.Bus.RebusSynchronizationContext.Run()
   at Rebus.Bus.Worker.MainLoop()
2014-12-07 03:53:05,871 [Rebus 1 worker 1] ERROR Rebus.Bus.Worker - Handling message c1071bc9-6713-48a6-8955-afc56f3cf1d9\7 has failed the maximum number of times - details: 12/7/2014 3:53:05 AM:
System.ArgumentException: An error occurred while attempting to deserialize JSON text '{
  "$type": "System.Object[], mscorlib",
  "$values": [
    {
      "$type": "PropertyLogic.Events.PropertyCreated, PropertyLogic",
      "PropertyId": "00000000-0000-0000-0000-000000000000",
      "Date": "2014-12-07T03:53:05.806136+01:00",
      "UserId": "a9b39f6c-631d-472a-84df-313d37421a70"
    }
  ]
}' into an object[] ---> System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.ArgumentNullException: Precondition failed: value != Guid.Empty
   at System.Diagnostics.Contracts.__ContractsRuntime.Requires[TException](Boolean condition, String msg, String conditionTxt) in d:\projects\Zen.Imobi\Base\Data\Repository.cs:line 0
   at Base.Guard.AgainstNullOrEmpty(Guid value) in d:\projects\Zen.Imobi\Base\Guard.cs:line 16
   at PropertyLogic.Events.PropertyCreated..ctor(Guid userId, Guid propertyId) in d:\projects\Zen.Imobi\PropertyLogic\Events\PropertyCreated.cs:line 14
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.ConstructorInfo.Invoke(Object[] parameters)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(JsonReader reader, JsonObjectContract contract, JsonProperty containerProperty, ConstructorInfo constructorInfo, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(JsonReader reader, JsonObjectContract objectContract, JsonProperty containerMember, JsonProperty containerProperty, String id, Boolean& createdFromNonDefaultConstructor)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IWrappedCollection wrappedList, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(JsonReader reader, Type& objectType, JsonContract& contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue, Object& newValue, String& id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, JsonSerializerSettings settings)
   at Rebus.Serialization.Json.JsonMessageSerializer.Deserialize(ReceivedTransportMessage transportMessage)
   --- End of inner exception stack trace ---
   at Rebus.Serialization.Json.JsonMessageSerializer.Deserialize(ReceivedTransportMessage transportMessage)
   at Rebus.Bus.Worker.<DoTry>d__25.MoveNext()

12/7/2014 3:53:05 AM:
System.ArgumentException: An error occurred while attempting to deserialize JSON text '{
  "$type": "System.Object[], mscorlib",
  "$values": [
    {
      "$type": "PropertyLogic.Events.PropertyCreated, PropertyLogic",
      "PropertyId": "00000000-0000-0000-0000-000000000000",
      "Date": "2014-12-07T03:53:05.806136+01:00",
      "UserId": "a9b39f6c-631d-472a-84df-313d37421a70"
    }
  ]
}' into an object[] ---> System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.ArgumentNullException: Precondition failed: value != Guid.Empty
   at System.Diagnostics.Contracts.__ContractsRuntime.Requires[TException](Boolean condition, String msg, String conditionTxt) in d:\projects\Zen.Imobi\Base\Data\Repository.cs:line 0
   at Base.Guard.AgainstNullOrEmpty(Guid value) in d:\projects\Zen.Imobi\Base\Guard.cs:line 16
   at PropertyLogic.Events.PropertyCreated..ctor(Guid userId, Guid propertyId) in d:\projects\Zen.Imobi\PropertyLogic\Events\PropertyCreated.cs:line 14
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.ConstructorInfo.Invoke(Object[] parameters)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(JsonReader reader, JsonObjectContract contract, JsonProperty containerProperty, ConstructorInfo constructorInfo, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(JsonReader reader, JsonObjectContract objectContract, JsonProperty containerMember, JsonProperty containerProperty, String id, Boolean& createdFromNonDefaultConstructor)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IWrappedCollection wrappedList, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(JsonReader reader, Type& objectType, JsonContract& contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue, Object& newValue, String& id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, JsonSerializerSettings settings)
   at Rebus.Serialization.Json.JsonMessageSerializer.Deserialize(ReceivedTransportMessage transportMessage)
   --- End of inner exception stack trace ---
   at Rebus.Serialization.Json.JsonMessageSerializer.Deserialize(ReceivedTransportMessage transportMessage)
   at Rebus.Bus.Worker.<DoTry>d__25.MoveNext()

12/7/2014 3:53:05 AM:
System.ArgumentException: An error occurred while attempting to deserialize JSON text '{
  "$type": "System.Object[], mscorlib",
  "$values": [
    {
      "$type": "PropertyLogic.Events.PropertyCreated, PropertyLogic",
      "PropertyId": "00000000-0000-0000-0000-000000000000",
      "Date": "2014-12-07T03:53:05.806136+01:00",
      "UserId": "a9b39f6c-631d-472a-84df-313d37421a70"
    }
  ]
}' into an object[] ---> System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.ArgumentNullException: Precondition failed: value != Guid.Empty
   at System.Diagnostics.Contracts.__ContractsRuntime.Requires[TException](Boolean condition, String msg, String conditionTxt) in d:\projects\Zen.Imobi\Base\Data\Repository.cs:line 0
   at Base.Guard.AgainstNullOrEmpty(Guid value) in d:\projects\Zen.Imobi\Base\Guard.cs:line 16
   at PropertyLogic.Events.PropertyCreated..ctor(Guid userId, Guid propertyId) in d:\projects\Zen.Imobi\PropertyLogic\Events\PropertyCreated.cs:line 14
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.ConstructorInfo.Invoke(Object[] parameters)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(JsonReader reader, JsonObjectContract contract, JsonProperty containerProperty, ConstructorInfo constructorInfo, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(JsonReader reader, JsonObjectContract objectContract, JsonProperty containerMember, JsonProperty containerProperty, String id, Boolean& createdFromNonDefaultConstructor)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IWrappedCollection wrappedList, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(JsonReader reader, Type& objectType, JsonContract& contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue, Object& newValue, String& id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, JsonSerializerSettings settings)
   at Rebus.Serialization.Json.JsonMessageSerializer.Deserialize(ReceivedTransportMessage transportMessage)
   --- End of inner exception stack trace ---
   at Rebus.Serialization.Json.JsonMessageSerializer.Deserialize(ReceivedTransportMessage transportMessage)
   at Rebus.Bus.Worker.<DoTry>d__25.MoveNext()

12/7/2014 3:53:05 AM:
System.ArgumentException: An error occurred while attempting to deserialize JSON text '{
  "$type": "System.Object[], mscorlib",
  "$values": [
    {
      "$type": "PropertyLogic.Events.PropertyCreated, PropertyLogic",
      "PropertyId": "00000000-0000-0000-0000-000000000000",
      "Date": "2014-12-07T03:53:05.806136+01:00",
      "UserId": "a9b39f6c-631d-472a-84df-313d37421a70"
    }
  ]
}' into an object[] ---> System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.ArgumentNullException: Precondition failed: value != Guid.Empty
   at System.Diagnostics.Contracts.__ContractsRuntime.Requires[TException](Boolean condition, String msg, String conditionTxt) in d:\projects\Zen.Imobi\Base\Data\Repository.cs:line 0
   at Base.Guard.AgainstNullOrEmpty(Guid value) in d:\projects\Zen.Imobi\Base\Guard.cs:line 16
   at PropertyLogic.Events.PropertyCreated..ctor(Guid userId, Guid propertyId) in d:\projects\Zen.Imobi\PropertyLogic\Events\PropertyCreated.cs:line 14
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.ConstructorInfo.Invoke(Object[] parameters)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(JsonReader reader, JsonObjectContract contract, JsonProperty containerProperty, ConstructorInfo constructorInfo, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(JsonReader reader, JsonObjectContract objectContract, JsonProperty containerMember, JsonProperty containerProperty, String id, Boolean& createdFromNonDefaultConstructor)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IWrappedCollection wrappedList, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(JsonReader reader, Type& objectType, JsonContract& contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue, Object& newValue, String& id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, JsonSerializerSettings settings)
   at Rebus.Serialization.Json.JsonMessageSerializer.Deserialize(ReceivedTransportMessage transportMessage)
   --- End of inner exception stack trace ---
   at Rebus.Serialization.Json.JsonMessageSerializer.Deserialize(ReceivedTransportMessage transportMessage)
   at Rebus.Bus.Worker.<DoTry>d__25.MoveNext()

12/7/2014 3:53:05 AM:
System.ArgumentException: An error occurred while attempting to deserialize JSON text '{
  "$type": "System.Object[], mscorlib",
  "$values": [
    {
      "$type": "PropertyLogic.Events.PropertyCreated, PropertyLogic",
      "PropertyId": "00000000-0000-0000-0000-000000000000",
      "Date": "2014-12-07T03:53:05.806136+01:00",
      "UserId": "a9b39f6c-631d-472a-84df-313d37421a70"
    }
  ]
}' into an object[] ---> System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.ArgumentNullException: Precondition failed: value != Guid.Empty
   at System.Diagnostics.Contracts.__ContractsRuntime.Requires[TException](Boolean condition, String msg, String conditionTxt) in d:\projects\Zen.Imobi\Base\Data\Repository.cs:line 0
   at Base.Guard.AgainstNullOrEmpty(Guid value) in d:\projects\Zen.Imobi\Base\Guard.cs:line 16
   at PropertyLogic.Events.PropertyCreated..ctor(Guid userId, Guid propertyId) in d:\projects\Zen.Imobi\PropertyLogic\Events\PropertyCreated.cs:line 14
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.ConstructorInfo.Invoke(Object[] parameters)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(JsonReader reader, JsonObjectContract contract, JsonProperty containerProperty, ConstructorInfo constructorInfo, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(JsonReader reader, JsonObjectContract objectContract, JsonProperty containerMember, JsonProperty containerProperty, String id, Boolean& createdFromNonDefaultConstructor)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IWrappedCollection wrappedList, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadSpecialProperties(JsonReader reader, Type& objectType, JsonContract& contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue, Object& newValue, String& id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, JsonSerializerSettings settings)
   at Rebus.Serialization.Json.JsonMessageSerializer.Deserialize(ReceivedTransportMessage transportMessage)
   --- End of inner exception stack trace ---
   at Rebus.Serialization.Json.JsonMessageSerializer.Deserialize(ReceivedTransportMessage transportMessage)
   at Rebus.Bus.Worker.<DoTry>d__25.MoveNext()
2014-12-07 03:53:05,874 [Rebus 1 worker 1] WARN Rebus.Bus.RebusBus - Message PropertyLogic.Events.PropertyCreated is forwarded to error queue
2014-12-07 03:54:57,988 [266] INFO Rebus.Bus.Worker - Stopping worker thread Rebus 1 worker 1
2014-12-07 03:54:57,991 [107] INFO Rebus.Bus.Worker - Disposing worker thread Rebus 1 worker 1
2014-12-07 03:55:02,703 [107] INFO Rebus.Transports.Msmq.MsmqMessageQueue - Disposing message queue .\private$\zen.imobi.input
2014-12-07 03:56:02,159 [1] INFO Rebus.Configuration.DetermineMessageOwnershipFromRebusConfigurationSection - Mapping assembly: PropertyLogic
2014-12-07 03:56:02,199 [1] INFO Rebus.Configuration.DetermineMessageOwnershipFromRebusConfigurationSection -     PropertyLogic.Data.IPropertiesRepository -> zen.imobi.input
2014-12-07 03:56:02,222 [1] INFO Rebus.Configuration.DetermineMessageOwnershipFromRebusConfigurationSection -     PropertyLogic.Data.LocationDao -> zen.imobi.input
2014-12-07 03:56:02,226 [1] INFO Rebus.Configuration.DetermineMessageOwnershipFromRebusConfigurationSection -     PropertyLogic.Data.PropertyContext -> zen.imobi.input
2014-12-07 03:56:02,227 [1] INFO Rebus.Configuration.DetermineMessageOwnershipFromRebusConfigurationSection -     PropertyLogic.EventsHandlerSubscriber -> zen.imobi.input
2014-12-07 03:56:02,229 [1] INFO Rebus.Configuration.DetermineMessageOwnershipFromRebusConfigurationSection -     PropertyLogic.Events.PropertyCreated -> zen.imobi.input
2014-12-07 03:56:02,230 [1] INFO Rebus.Configuration.DetermineMessageOwnershipFromRebusConfigurationSection -     PropertyLogic.Location -> zen.imobi.input
2014-12-07 03:56:02,232 [1] INFO Rebus.Configuration.DetermineMessageOwnershipFromRebusConfigurationSection -     PropertyLogic.Data.PropertyDao -> zen.imobi.input
2014-12-07 03:56:02,233 [1] INFO Rebus.Configuration.DetermineMessageOwnershipFromRebusConfigurationSection -     PropertyLogic.Data.PropertiesRepository -> zen.imobi.input
2014-12-07 03:56:02,235 [1] INFO Rebus.Configuration.DetermineMessageOwnershipFromRebusConfigurationSection -     PropertyLogic.Migrations.InitialCommit -> zen.imobi.input
2014-12-07 03:56:02,236 [1] INFO Rebus.Configuration.DetermineMessageOwnershipFromRebusConfigurationSection -     PropertyLogic.Migrations.Configuration -> zen.imobi.input
2014-12-07 03:56:02,237 [1] INFO Rebus.Configuration.DetermineMessageOwnershipFromRebusConfigurationSection -     PropertyLogic.Property -> zen.imobi.input
2014-12-07 03:56:02,238 [1] INFO Rebus.Configuration.DetermineMessageOwnershipFromRebusConfigurationSection -     PropertyLogic.PropertyStatus -> zen.imobi.input
2014-12-07 03:56:02,239 [1] INFO Rebus.Configuration.DetermineMessageOwnershipFromRebusConfigurationSection -     <>f__AnonymousType0`7[<Id>j__TPar,<Country>j__TPar,<ZipCode>j__TPar,<Street>j__TPar,<City>j__TPar,<Latitude>j__TPar,<Longitude>j__TPar] -> zen.imobi.input
2014-12-07 03:56:02,241 [1] INFO Rebus.Configuration.DetermineMessageOwnershipFromRebusConfigurationSection -     <>f__AnonymousType1`4[<Id>j__TPar,<Description>j__TPar,<Status>j__TPar,<UserId>j__TPar] -> zen.imobi.input
2014-12-07 03:56:02,242 [1] INFO Rebus.Configuration.DetermineMessageOwnershipFromRebusConfigurationSection -     System.Diagnostics.Contracts.__ContractsRuntime -> zen.imobi.input
2014-12-07 03:56:02,244 [1] INFO Rebus.Configuration.DetermineMessageOwnershipFromRebusConfigurationSection -     System.Diagnostics.Contracts.RuntimeContractsFlags -> zen.imobi.input
2014-12-07 03:56:02,246 [1] INFO Rebus.Configuration.DetermineMessageOwnershipFromRebusConfigurationSection -     System.Diagnostics.Contracts.RuntimeContractsAttribute -> zen.imobi.input
2014-12-07 03:56:02,250 [1] INFO Rebus.Configuration.DetermineMessageOwnershipFromRebusConfigurationSection -     System.Diagnostics.Contracts.__ContractsRuntime+ContractException -> zen.imobi.input
2014-12-07 03:56:02,252 [1] INFO Rebus.Configuration.DetermineMessageOwnershipFromRebusConfigurationSection -     System.Diagnostics.Contracts.__ContractsRuntime+ContractException+ContractExceptionData -> zen.imobi.input
2014-12-07 03:56:02,358 [1] INFO Rebus.Bus.RebusBus - Rebus bus 1 created
2014-12-07 03:56:02,361 [1] INFO Rebus.Bus.RebusBus - Using external timeout manager with input queue 'rebus.timeout'
2014-12-07 03:56:02,380 [1] INFO Rebus.Bus.RebusBus - Initializing bus with 1 workers
2014-12-07 03:56:02,394 [1] INFO Rebus.Bus.Worker - Worker Rebus 1 worker 1 created and inner thread started
2014-12-07 03:56:02,398 [1] INFO Rebus.Bus.Worker - Starting worker thread Rebus 1 worker 1
2014-12-07 03:56:02,405 [1] INFO Rebus.Bus.RebusBus - Bus started
2014-12-07 03:56:02,821 [Rebus 1 worker 1] INFO Rebus.Bus.SubscriptionMessageHandler - Saving: zen.imobi.input@MSI subscribed to PropertyLogic.Events.PropertyCreated
2014-12-07 03:56:50,331 [Rebus 1 worker 1] WARN Rebus.Bus.RebusBus - User exception in Rebus 1 worker 1: Rebus.MessageHandleException: Could not handle message with ID c1071bc9-6713-48a6-8955-afc56f3cf1d9\13 ---> Rebus.UnhandledMessageException: Could not find any handlers to execute message of type PropertyLogic.Events.PropertyCreated
   at Rebus.Bus.Dispatcher.<Dispatch>d__6`1.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Rebus.Bus.Worker.<DoTry>d__25.MoveNext()
   --- End of inner exception stack trace ---
   at Rebus.Bus.Worker.<DoTry>d__25.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Rebus.Bus.Worker.<TryProcessIncomingMessage>d__1d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.<ThrowAsync>b__3(Object state)
   at Rebus.Bus.RebusSynchronizationContext.Run()
   at Rebus.Bus.Worker.MainLoop()
2014-12-07 03:56:50,425 [Rebus 1 worker 1] WARN Rebus.Bus.RebusBus - User exception in Rebus 1 worker 1: Rebus.MessageHandleException: Could not handle message with ID c1071bc9-6713-48a6-8955-afc56f3cf1d9\13 ---> Rebus.UnhandledMessageException: Could not find any handlers to execute message of type PropertyLogic.Events.PropertyCreated
   at Rebus.Bus.Dispatcher.<Dispatch>d__6`1.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Rebus.Bus.Worker.<DoTry>d__25.MoveNext()
   --- End of inner exception stack trace ---
   at Rebus.Bus.Worker.<DoTry>d__25.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Rebus.Bus.Worker.<TryProcessIncomingMessage>d__1d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.<ThrowAsync>b__3(Object state)
   at Rebus.Bus.RebusSynchronizationContext.Run()
   at Rebus.Bus.Worker.MainLoop()
2014-12-07 03:56:50,538 [Rebus 1 worker 1] WARN Rebus.Bus.RebusBus - User exception in Rebus 1 worker 1: Rebus.MessageHandleException: Could not handle message with ID c1071bc9-6713-48a6-8955-afc56f3cf1d9\13 ---> Rebus.UnhandledMessageException: Could not find any handlers to execute message of type PropertyLogic.Events.PropertyCreated
   at Rebus.Bus.Dispatcher.<Dispatch>d__6`1.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Rebus.Bus.Worker.<DoTry>d__25.MoveNext()
   --- End of inner exception stack trace ---
   at Rebus.Bus.Worker.<DoTry>d__25.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Rebus.Bus.Worker.<TryProcessIncomingMessage>d__1d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.<ThrowAsync>b__3(Object state)
   at Rebus.Bus.RebusSynchronizationContext.Run()
   at Rebus.Bus.Worker.MainLoop()
2014-12-07 03:56:50,634 [Rebus 1 worker 1] WARN Rebus.Bus.RebusBus - User exception in Rebus 1 worker 1: Rebus.MessageHandleException: Could not handle message with ID c1071bc9-6713-48a6-8955-afc56f3cf1d9\13 ---> Rebus.UnhandledMessageException: Could not find any handlers to execute message of type PropertyLogic.Events.PropertyCreated
   at Rebus.Bus.Dispatcher.<Dispatch>d__6`1.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Rebus.Bus.Worker.<DoTry>d__25.MoveNext()
   --- End of inner exception stack trace ---
   at Rebus.Bus.Worker.<DoTry>d__25.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Rebus.Bus.Worker.<TryProcessIncomingMessage>d__1d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.<ThrowAsync>b__3(Object state)
   at Rebus.Bus.RebusSynchronizationContext.Run()
   at Rebus.Bus.Worker.MainLoop()
2014-12-07 03:56:50,719 [Rebus 1 worker 1] WARN Rebus.Bus.RebusBus - User exception in Rebus 1 worker 1: Rebus.MessageHandleException: Could not handle message with ID c1071bc9-6713-48a6-8955-afc56f3cf1d9\13 ---> Rebus.UnhandledMessageException: Could not find any handlers to execute message of type PropertyLogic.Events.PropertyCreated
   at Rebus.Bus.Dispatcher.<Dispatch>d__6`1.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Rebus.Bus.Worker.<DoTry>d__25.MoveNext()
   --- End of inner exception stack trace ---
   at Rebus.Bus.Worker.<DoTry>d__25.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Rebus.Bus.Worker.<TryProcessIncomingMessage>d__1d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.<ThrowAsync>b__3(Object state)
   at Rebus.Bus.RebusSynchronizationContext.Run()
   at Rebus.Bus.Worker.MainLoop()
2014-12-07 03:56:50,726 [Rebus 1 worker 1] ERROR Rebus.Bus.Worker - Handling message c1071bc9-6713-48a6-8955-afc56f3cf1d9\13 has failed the maximum number of times - details: 12/7/2014 3:56:50 AM:
Rebus.UnhandledMessageException: Could not find any handlers to execute message of type PropertyLogic.Events.PropertyCreated
   at Rebus.Bus.Dispatcher.<Dispatch>d__6`1.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Rebus.Bus.Worker.<DoTry>d__25.MoveNext()

12/7/2014 3:56:50 AM:
Rebus.UnhandledMessageException: Could not find any handlers to execute message of type PropertyLogic.Events.PropertyCreated
   at Rebus.Bus.Dispatcher.<Dispatch>d__6`1.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Rebus.Bus.Worker.<DoTry>d__25.MoveNext()

12/7/2014 3:56:50 AM:
Rebus.UnhandledMessageException: Could not find any handlers to execute message of type PropertyLogic.Events.PropertyCreated
   at Rebus.Bus.Dispatcher.<Dispatch>d__6`1.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Rebus.Bus.Worker.<DoTry>d__25.MoveNext()

12/7/2014 3:56:50 AM:
Rebus.UnhandledMessageException: Could not find any handlers to execute message of type PropertyLogic.Events.PropertyCreated
   at Rebus.Bus.Dispatcher.<Dispatch>d__6`1.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Rebus.Bus.Worker.<DoTry>d__25.MoveNext()

12/7/2014 3:56:50 AM:
Rebus.UnhandledMessageException: Could not find any handlers to execute message of type PropertyLogic.Events.PropertyCreated
   at Rebus.Bus.Dispatcher.<Dispatch>d__6`1.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Rebus.Bus.Worker.<DoTry>d__25.MoveNext()
2014-12-07 03:56:50,739 [Rebus 1 worker 1] WARN Rebus.Bus.RebusBus - Message PropertyLogic.Events.PropertyCreated is forwarded to error queue
2014-12-07 04:02:21,908 [46] INFO Rebus.Bus.Worker - Stopping worker thread Rebus 1 worker 1
2014-12-07 04:02:21,913 [19] INFO Rebus.Bus.Worker - Disposing worker thread Rebus 1 worker 1
2014-12-07 04:02:25,202 [19] INFO Rebus.Transports.Msmq.MsmqMessageQueue - Disposing message queue .\private$\zen.imobi.input
